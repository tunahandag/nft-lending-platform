{
  "id": "5046983d4555cc0e84149173ace00b6f",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.24",
  "solcLongVersion": "0.8.24+commit.e11b9ed9",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/NFTLending.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/utils/Pausable.sol\";\n\n\n/**\n * @title NFTLending\n * @author @tunahandag\n * @dev Contract for lending ETH against NFT collaterals\n * Borrowers can lock their NFTs as collateral and borrow ETH\n * Lenders can deposit ETH into the contract to provide liquidity for loans\n * Borrowers can repay the loan and claim back their NFTs\n * If the borrower does not repay the loan within the loan duration, the NFT is claimed by the contract owner\n * The contract owner can withdraw funds from the contract\n */\ncontract NFTLending is ReentrancyGuard, Pausable, Ownable {\n    \n    uint256 public interestRate; // Interest rate in basis points (e.g., 500 for 5%)\n    uint256 public maxPercentageForLoans = 8000; // Loan can be 80% of the NFT price\n    uint256 public loanDuration; // Loan duration in seconds is fixed for every loan\n    uint256 public totalLoans; // Total number of loans created\n    uint256 public maxNumberOfLendingsPerWallet = 2; // Maximum number of loans per wallet\n\n    // Struct to represent a loan\n    struct Loan {\n        address borrower; // The borrower of the loan\n        address nftAddress; // The address of the NFT contract\n        uint256 nftId; // The token ID of the NFT\n        uint256 loanAmount; // The amount of the loan\n        uint256 loanStart; // The timestamp when the loan was created\n        bool isActive; // Flag to check if the loan is active\n    }\n\n    mapping(uint256 => Loan) public loans; // Mapping from loan ID to Loan\n    mapping(uint256 => bool) public collateralizedNFTs; // Mapping from NFT ID to boolean to check if the NFT is already collateralized\n    mapping(address => uint256) loanCountPerWallet; // Mapping from wallet address to the number of loans created by the wallet\n\n    // Events\n    event LoanCreated(address indexed borrower, uint256 indexed loanId, uint256 nftId, uint256 loanAmount);\n    event LoanRepaid(address indexed borrower, uint256 indexed loanId, uint256 nftId);\n    event NFTClaimed(address indexed owner, uint256 indexed loanId, uint256 nftId);\n\n    // Errors\n    error TooManyLoans();\n    error InsufficientContractBalance();\n    error UnauthorizedTransfer();\n    error TransferFailed();\n    error LoanDeactive();\n    error LoanNotExpired();\n    error LoanExpired();\n    error LoanAmountTooHigh();\n    error UnauthorizedBorrower();\n    error NotOwner();\n    error AlreadyCollateralized();\n    error InsufficientAmount();\n\n    /**\n     * @dev Constructor to initialize the interest rate and loan duration\n     * @param _interestRate The interest rate in basis points\n     * @param _loanDuration The duration of the loan in seconds\n     */\n    constructor(uint256 _interestRate, uint256 _loanDuration) Ownable(msg.sender){\n        interestRate = _interestRate;\n        loanDuration = _loanDuration;\n    }\n    \n    /**\n     * @dev Function to create a loan by collateralizing an NFT\n     * @param _nftAddress The address of the NFT contract\n     * @param _nftId The token ID of the NFT\n     * @param _loanAmount The amount of the loan\n     * @notice The borrower must be the owner of the NFT\n     * @notice The NFT must be approved for transfer by the contract\n     * @notice The contract must have enough balance to transfer the loan amount\n     * @notice The loan amount must be less than the maximum percentage of the NFT price\n     * @notice The borrower can only have a maximum number of loans\n     * @notice The NFT must not be already collateralized\n     */\n    function createLoan(address _nftAddress, uint256 _nftId, uint256 _loanAmount) external nonReentrant whenNotPaused{\n        if(IERC721(_nftAddress).ownerOf(_nftId) != msg.sender) revert NotOwner();\n        // if(collateralizedNFTs[_nftId]) revert AlreadyCollateralized();\n        if(address(this).balance < _loanAmount) revert InsufficientContractBalance();\n        if(IERC721(_nftAddress).getApproved(_nftId) != address(this)) revert UnauthorizedTransfer();\n        if(loanCountPerWallet[msg.sender] >= maxNumberOfLendingsPerWallet) revert TooManyLoans();\n        if(_loanAmount > getNFTPrice() * maxPercentageForLoans / 10000) revert LoanAmountTooHigh();\n\n        // Create the loan\n        Loan memory newLoan = Loan({\n            borrower: msg.sender,\n            nftAddress: _nftAddress,\n            nftId: _nftId,\n            loanAmount: _loanAmount,\n            loanStart: block.timestamp,\n            isActive: true\n        });\n        loanCountPerWallet[msg.sender]++;\n        // Transfer NFT to the contract as collateral\n        // ERC721 transferFrom method already checks for zero address and ownership so no need to add guards here\n        IERC721(_nftAddress).transferFrom(msg.sender, address(this), _nftId);\n        loans[totalLoans] = newLoan;\n        collateralizedNFTs[_nftId] = true;\n        totalLoans++;\n        // Transfer loan amount to the borrower\n        transferETH(payable(msg.sender), _loanAmount);\n        emit LoanCreated(msg.sender, totalLoans - 1, _nftId, _loanAmount);\n    }\n\n    /**\n     * @dev Function to repay a loan by transferring the loan amount to the contract with interest\n     * @param _loanId The ID of the loan\n     */\n    function repayLoan(uint256 _loanId) external payable nonReentrant whenNotPaused {\n        Loan storage loan = loans[_loanId];\n        if(!loan.isActive) revert LoanDeactive();\n        if(loan.borrower != msg.sender) revert UnauthorizedBorrower();\n        if(block.timestamp > loan.loanStart + loanDuration) revert LoanExpired();\n        uint256 totalRepayment = calculateRepaymentAmount(loan.loanAmount);\n        if(msg.value < totalRepayment) revert InsufficientAmount();\n\n\n        // Transfer NFT back to the borrower\n        IERC721(loan.nftAddress).transferFrom(address(this), msg.sender, loan.nftId);\n        // Mark the loan as inactive\n        loan.isActive = false;\n        collateralizedNFTs[loan.nftId] = false;\n\n        emit LoanRepaid(msg.sender, _loanId, loan.nftId);\n    }\n\n    /**\n     * @dev Function to claim an NFT by the contract owner if the loan is not repaid within the loan duration\n     * @param _loanId The ID of the loan\n     */\n    function claimNFT(uint256 _loanId) external onlyOwner {\n        Loan storage loan = loans[_loanId];\n        if(!loan.isActive) revert LoanDeactive();\n        if(block.timestamp < loan.loanStart + loanDuration) revert LoanNotExpired();\n        // Transfer NFT to the contract owner\n        IERC721(loan.nftAddress).safeTransferFrom(address(this), owner(), loan.nftId);\n        // Mark the loan as inactive\n        loan.isActive = false;\n        collateralizedNFTs[loan.nftId] = false;\n        emit NFTClaimed(owner(), _loanId, loan.nftId);\n    }\n\n    /**\n     * @dev Function to calculate the repayment amount with interest\n     * @param _loanAmount The amount of the loan\n     * @return The total repayment amount with interest\n     */\n    function calculateRepaymentAmount(uint256 _loanAmount) public view returns (uint256) {\n        return _loanAmount + ((_loanAmount * interestRate) / 10000);\n    }\n\n    /**\n     * @dev Function to deposit ETH into the contract to provide liquidity for loans\n     */\n    function depositFunds() external payable onlyOwner {\n    }\n\n    /**\n     * @dev Function to withdraw ETH from the contract\n     * @param _amount The amount of ETH to withdraw\n     * @notice The contract owner can withdraw funds from the contract\n     */\n    function withdrawFunds(uint256 _amount) external onlyOwner {\n        if(_amount > address(this).balance) revert InsufficientContractBalance();\n        transferETH(payable(owner()), _amount);\n    }\n\n    /**\n     * @dev Transfer ETH to given address\n     * @param _to The address to transfer ETH\n     * @param _amount The amount of ETH to transfer\n     * @notice This function is used to transfer ETH to given address\n     */\n    function transferETH(address payable _to, uint256 _amount) internal {\n        // Call returns a boolean value indicating success or failure.\n        // This is the current recommended method to use.\n        (bool sent, ) = _to.call{value: _amount}(\"\");\n        if(!sent) revert TransferFailed();\n    }\n\n    /**\n     * @dev Get the price of the NFT\n     * @return The price of the NFT\n     * @notice This function is used to get the price of the NFT, can be improved by connecting it to an oracle\n     */\n    function getNFTPrice() public pure returns (uint256) {\n        return 100;\n    }\n\n    /**\n     * @dev Fallback function to accept ETH\n     */\n    receive() external payable {}\n\n    /**\n     * @dev Function to pause the contract\n     * @notice The contract owner can pause the contract\n     */\n    function pause(bool value) external onlyOwner {\n        if(value) {\n            _pause();\n            return;\n        }\n        _unpause();\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              294
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 295,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 294,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                294
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 276,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              492
            ],
            "IERC721": [
              264
            ]
          },
          "id": 265,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 151,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 265,
              "sourceUnit": 493,
              "src": "134:62:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 150,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 492,
                    "src": "142:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 153,
                    "name": "IERC165",
                    "nameLocations": [
                      "287:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 492,
                    "src": "287:7:1"
                  },
                  "id": 154,
                  "nodeType": "InheritanceSpecifier",
                  "src": "287:7:1"
                }
              ],
              "canonicalName": "IERC721",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 152,
                "nodeType": "StructuredDocumentation",
                "src": "198:67:1",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 264,
              "linearizedBaseContracts": [
                264,
                492
              ],
              "name": "IERC721",
              "nameLocation": "276:7:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 155,
                    "nodeType": "StructuredDocumentation",
                    "src": "301:88:1",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 163,
                  "name": "Transfer",
                  "nameLocation": "400:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "425:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "409:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "409:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 159,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "447:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "431:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "431:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "467:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "451:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "451:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "408:67:1"
                  },
                  "src": "394:82:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 164,
                    "nodeType": "StructuredDocumentation",
                    "src": "482:94:1",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 172,
                  "name": "Approval",
                  "nameLocation": "587:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "612:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "596:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "596:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "635:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "619:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "619:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "661:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 172,
                        "src": "645:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "645:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "595:74:1"
                  },
                  "src": "581:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 173,
                    "nodeType": "StructuredDocumentation",
                    "src": "676:117:1",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 181,
                  "name": "ApprovalForAll",
                  "nameLocation": "804:14:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 175,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "835:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "819:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "819:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 177,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "858:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "842:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "842:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 179,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "873:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "868:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "868:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "818:64:1"
                  },
                  "src": "798:85:1"
                },
                {
                  "documentation": {
                    "id": 182,
                    "nodeType": "StructuredDocumentation",
                    "src": "889:76:1",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 189,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "979:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "997:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "989:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "989:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "988:15:1"
                  },
                  "returnParameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "1035:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "1027:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:17:1"
                  },
                  "scope": 264,
                  "src": "970:74:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "1050:131:1",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 197,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1195:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1211:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1203:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1203:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1202:17:1"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1251:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1243:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1243:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1242:15:1"
                  },
                  "scope": 264,
                  "src": "1186:72:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "1264:565:1",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 209,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1843:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1868:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1860:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1882:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1874:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1874:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1894:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1886:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1886:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1918:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "1903:19:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1903:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1859:64:1"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1932:0:1"
                  },
                  "scope": 264,
                  "src": "1834:99:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "1939:705:1",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 219,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "2658:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2683:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2675:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2675:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2697:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2689:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2689:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2709:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "2701:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2701:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2674:43:1"
                  },
                  "returnParameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2726:0:1"
                  },
                  "scope": 264,
                  "src": "2649:78:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "2733:732:1",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 229,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "3479:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3500:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "3492:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3492:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3514:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "3506:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3506:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3526:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "3518:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3518:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3491:43:1"
                  },
                  "returnParameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3543:0:1"
                  },
                  "scope": 264,
                  "src": "3470:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 230,
                    "nodeType": "StructuredDocumentation",
                    "src": "3550:452:1",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 237,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4016:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4032:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "4024:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4024:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4044:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "4036:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4036:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4023:29:1"
                  },
                  "returnParameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4061:0:1"
                  },
                  "scope": 264,
                  "src": "4007:55:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "4068:315:1",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 245,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "4397:17:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4423:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "4415:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4415:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "4438:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "4433:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4433:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4414:33:1"
                  },
                  "returnParameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4456:0:1"
                  },
                  "scope": 264,
                  "src": "4388:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 246,
                    "nodeType": "StructuredDocumentation",
                    "src": "4463:139:1",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 253,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "4616:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4636:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4628:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4628:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4627:17:1"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4676:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "4668:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4668:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4667:18:1"
                  },
                  "scope": 264,
                  "src": "4607:79:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "4692:138:1",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "4844:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4869:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "4861:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4861:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4884:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "4876:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4860:33:1"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "4917:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4917:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4916:6:1"
                  },
                  "scope": 264,
                  "src": "4835:88:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 265,
              "src": "266:4659:1",
              "usedErrors": [],
              "usedEvents": [
                163,
                172,
                181
              ]
            }
          ],
          "src": "108:4818:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              294
            ]
          },
          "id": 295,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 266,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 267,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 294,
              "linearizedBaseContracts": [
                294
              ],
              "name": "Context",
              "nameLocation": "642:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "718:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 272,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 271,
                        "id": 274,
                        "nodeType": "Return",
                        "src": "728:17:2"
                      }
                    ]
                  },
                  "id": 276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:2"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "709:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:2"
                  },
                  "scope": 294,
                  "src": "656:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 284,
                    "nodeType": "Block",
                    "src": "825:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 281,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 280,
                        "id": 283,
                        "nodeType": "Return",
                        "src": "835:15:2"
                      }
                    ]
                  },
                  "id": 285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:2"
                  },
                  "returnParameters": {
                    "id": 280,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 285,
                        "src": "809:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:2"
                  },
                  "scope": 294,
                  "src": "758:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "935:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 289,
                        "id": 291,
                        "nodeType": "Return",
                        "src": "945:8:2"
                      }
                    ]
                  },
                  "id": 293,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:2"
                  },
                  "returnParameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:2"
                  },
                  "scope": 294,
                  "src": "863:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 295,
              "src": "624:338:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              294
            ],
            "Pausable": [
              411
            ]
          },
          "id": 412,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 296,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 298,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 412,
              "sourceUnit": 295,
              "src": "128:45:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 297,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "136:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 300,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 294,
                    "src": "645:7:3"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:3"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 299,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:3",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 411,
              "linearizedBaseContracts": [
                411,
                294
              ],
              "name": "Pausable",
              "nameLocation": "633:8:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 411,
                  "src": "659:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 304,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:3",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 308,
                  "name": "Paused",
                  "nameLocation": "770:6:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "777:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:3"
                  },
                  "src": "764:30:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:3",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 313,
                  "name": "Unpaused",
                  "nameLocation": "881:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "890:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:3"
                  },
                  "src": "875:32:3"
                },
                {
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:3",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 316,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:3"
                  },
                  "src": "994:22:3"
                },
                {
                  "documentation": {
                    "id": 317,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:3",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 319,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:3"
                  },
                  "src": "1107:22:3"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "1221:32:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 323,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "1231:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1241:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1231:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 326,
                        "nodeType": "ExpressionStatement",
                        "src": "1231:15:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:67:3",
                    "text": " @dev Initializes the contract in unpaused state."
                  },
                  "id": 328,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1218:2:3"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1221:0:3"
                  },
                  "scope": 411,
                  "src": "1207:46:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1464:47:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 331,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "1474:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1474:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "1474:19:3"
                      },
                      {
                        "id": 334,
                        "nodeType": "PlaceholderStatement",
                        "src": "1503:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 329,
                    "nodeType": "StructuredDocumentation",
                    "src": "1259:175:3",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 336,
                  "name": "whenNotPaused",
                  "nameLocation": "1448:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 330,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1461:2:3"
                  },
                  "src": "1439:72:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 343,
                    "nodeType": "Block",
                    "src": "1711:44:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 339,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "1721:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1721:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "1721:16:3"
                      },
                      {
                        "id": 342,
                        "nodeType": "PlaceholderStatement",
                        "src": "1747:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1517:167:3",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 344,
                  "name": "whenPaused",
                  "nameLocation": "1698:10:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:2:3"
                  },
                  "src": "1689:66:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 352,
                    "nodeType": "Block",
                    "src": "1903:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 350,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 303,
                          "src": "1920:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 349,
                        "id": 351,
                        "nodeType": "Return",
                        "src": "1913:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 345,
                    "nodeType": "StructuredDocumentation",
                    "src": "1761:84:3",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 353,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1859:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1865:2:3"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "1897:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1897:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1896:6:3"
                  },
                  "scope": 411,
                  "src": "1850:84:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 364,
                    "nodeType": "Block",
                    "src": "2053:77:3",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 357,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "2067:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2067:8:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 363,
                        "nodeType": "IfStatement",
                        "src": "2063:61:3",
                        "trueBody": {
                          "id": 362,
                          "nodeType": "Block",
                          "src": "2077:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 359,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 316,
                                  "src": "2098:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2098:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 361,
                              "nodeType": "RevertStatement",
                              "src": "2091:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "1940:57:3",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "2011:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "returnParameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2053:0:3"
                  },
                  "scope": 411,
                  "src": "2002:128:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 377,
                    "nodeType": "Block",
                    "src": "2250:78:3",
                    "statements": [
                      {
                        "condition": {
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2264:9:3",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 369,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 353,
                              "src": "2265:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2265:8:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 376,
                        "nodeType": "IfStatement",
                        "src": "2260:62:3",
                        "trueBody": {
                          "id": 375,
                          "nodeType": "Block",
                          "src": "2275:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 372,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 319,
                                  "src": "2296:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2296:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 374,
                              "nodeType": "RevertStatement",
                              "src": "2289:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 366,
                    "nodeType": "StructuredDocumentation",
                    "src": "2136:61:3",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 378,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2211:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2225:2:3"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2250:0:3"
                  },
                  "scope": 411,
                  "src": "2202:126:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "2512:66:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 384,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "2522:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2532:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2522:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 387,
                        "nodeType": "ExpressionStatement",
                        "src": "2522:14:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 389,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "2558:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2558:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 388,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 308,
                            "src": "2551:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2551:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 392,
                        "nodeType": "EmitStatement",
                        "src": "2546:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 379,
                    "nodeType": "StructuredDocumentation",
                    "src": "2334:124:3",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 394,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 382,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 381,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2498:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "2498:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2498:13:3"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2472:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2478:2:3"
                  },
                  "returnParameters": {
                    "id": 383,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2512:0:3"
                  },
                  "scope": 411,
                  "src": "2463:115:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 409,
                    "nodeType": "Block",
                    "src": "2758:69:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 400,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "2768:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2778:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2768:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "2768:15:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 405,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "2807:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2807:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 404,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 313,
                            "src": "2798:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2798:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 408,
                        "nodeType": "EmitStatement",
                        "src": "2793:27:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 395,
                    "nodeType": "StructuredDocumentation",
                    "src": "2584:121:3",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 398,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 397,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2747:10:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 344,
                        "src": "2747:10:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2747:10:3"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2719:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 396,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2727:2:3"
                  },
                  "returnParameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2758:0:3"
                  },
                  "scope": 411,
                  "src": "2710:117:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 412,
              "src": "615:2214:3",
              "usedErrors": [
                316,
                319
              ],
              "usedEvents": [
                308,
                313
              ]
            }
          ],
          "src": "102:2728:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              480
            ]
          },
          "id": 481,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 413,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 414,
                "nodeType": "StructuredDocumentation",
                "src": "135:750:4",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 480,
              "linearizedBaseContracts": [
                480
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "904:15:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 417,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1699:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "1674:40:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1713:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 420,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1745:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "1720:36:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1755:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 422,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1779:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "1763:23:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 423,
                    "nodeType": "StructuredDocumentation",
                    "src": "1793:52:4",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 425,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "1856:28:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1884:2:4"
                  },
                  "src": "1850:37:4"
                },
                {
                  "body": {
                    "id": 432,
                    "nodeType": "Block",
                    "src": "1907:38:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 428,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "1917:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 429,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "1927:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1917:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 431,
                        "nodeType": "ExpressionStatement",
                        "src": "1917:21:4"
                      }
                    ]
                  },
                  "id": 433,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:4"
                  },
                  "returnParameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1907:0:4"
                  },
                  "scope": 480,
                  "src": "1893:52:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "2346:79:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 436,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "2356:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2356:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "2356:21:4"
                      },
                      {
                        "id": 439,
                        "nodeType": "PlaceholderStatement",
                        "src": "2387:1:4"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 440,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 468,
                            "src": "2398:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2398:20:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 442,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:20:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 434,
                    "nodeType": "StructuredDocumentation",
                    "src": "1951:366:4",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 444,
                  "name": "nonReentrant",
                  "nameLocation": "2331:12:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2343:2:4"
                  },
                  "src": "2322:103:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "2470:268:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 447,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "2558:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 448,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "2569:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2558:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 454,
                        "nodeType": "IfStatement",
                        "src": "2554:86:4",
                        "trueBody": {
                          "id": 453,
                          "nodeType": "Block",
                          "src": "2578:62:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 450,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "2599:28:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2599:30:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 452,
                              "nodeType": "RevertStatement",
                              "src": "2592:37:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 455,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "2714:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 456,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "2724:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2714:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 458,
                        "nodeType": "ExpressionStatement",
                        "src": "2714:17:4"
                      }
                    ]
                  },
                  "id": 460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2440:19:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2459:2:4"
                  },
                  "returnParameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:4"
                  },
                  "scope": 480,
                  "src": "2431:307:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 467,
                    "nodeType": "Block",
                    "src": "2782:170:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 463,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "2924:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 464,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "2934:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2924:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 466,
                        "nodeType": "ExpressionStatement",
                        "src": "2924:21:4"
                      }
                    ]
                  },
                  "id": 468,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2753:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2771:2:4"
                  },
                  "returnParameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2782:0:4"
                  },
                  "scope": 480,
                  "src": "2744:208:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "3195:42:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 474,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 422,
                            "src": "3212:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 475,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "3223:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3212:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 473,
                        "id": 477,
                        "nodeType": "Return",
                        "src": "3205:25:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 469,
                    "nodeType": "StructuredDocumentation",
                    "src": "2958:168:4",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3140:23:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3163:2:4"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "3189:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3188:6:4"
                  },
                  "scope": 480,
                  "src": "3131:106:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 481,
              "src": "886:2353:4",
              "usedErrors": [
                425
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3131:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              492
            ]
          },
          "id": 493,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 482,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 483,
                "nodeType": "StructuredDocumentation",
                "src": "141:279:5",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 492,
              "linearizedBaseContracts": [
                492
              ],
              "name": "IERC165",
              "nameLocation": "431:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 484,
                    "nodeType": "StructuredDocumentation",
                    "src": "445:340:5",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 491,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "799:17:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 486,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "824:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "817:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 485,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "817:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "816:20:5"
                  },
                  "returnParameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "860:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "859:6:5"
                  },
                  "scope": 492,
                  "src": "790:76:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 493,
              "src": "421:447:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:754:5"
        },
        "id": 5
      },
      "contracts/NFTLending.sol": {
        "ast": {
          "absolutePath": "contracts/NFTLending.sol",
          "exportedSymbols": {
            "IERC721": [
              264
            ],
            "NFTLending": [
              1040
            ],
            "Ownable": [
              147
            ],
            "Pausable": [
              411
            ],
            "ReentrancyGuard": [
              480
            ]
          },
          "id": 1041,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 494,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".24"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 496,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1041,
              "sourceUnit": 265,
              "src": "58:73:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 495,
                    "name": "IERC721",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 264,
                    "src": "66:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 498,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1041,
              "sourceUnit": 481,
              "src": "132:82:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 497,
                    "name": "ReentrancyGuard",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 480,
                    "src": "140:15:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 500,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1041,
              "sourceUnit": 148,
              "src": "215:67:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 499,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "223:7:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 502,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1041,
              "sourceUnit": 412,
              "src": "283:68:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 501,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 411,
                    "src": "291:8:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 504,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "851:15:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 480,
                    "src": "851:15:6"
                  },
                  "id": 505,
                  "nodeType": "InheritanceSpecifier",
                  "src": "851:15:6"
                },
                {
                  "baseName": {
                    "id": 506,
                    "name": "Pausable",
                    "nameLocations": [
                      "868:8:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 411,
                    "src": "868:8:6"
                  },
                  "id": 507,
                  "nodeType": "InheritanceSpecifier",
                  "src": "868:8:6"
                },
                {
                  "baseName": {
                    "id": 508,
                    "name": "Ownable",
                    "nameLocations": [
                      "878:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "878:7:6"
                  },
                  "id": 509,
                  "nodeType": "InheritanceSpecifier",
                  "src": "878:7:6"
                }
              ],
              "canonicalName": "NFTLending",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 503,
                "nodeType": "StructuredDocumentation",
                "src": "354:473:6",
                "text": " @title NFTLending\n @author @tunahandag\n @dev Contract for lending ETH against NFT collaterals\n Borrowers can lock their NFTs as collateral and borrow ETH\n Lenders can deposit ETH into the contract to provide liquidity for loans\n Borrowers can repay the loan and claim back their NFTs\n If the borrower does not repay the loan within the loan duration, the NFT is claimed by the contract owner\n The contract owner can withdraw funds from the contract"
              },
              "fullyImplemented": true,
              "id": 1040,
              "linearizedBaseContracts": [
                1040,
                147,
                411,
                294,
                480
              ],
              "name": "NFTLending",
              "nameLocation": "837:10:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "7c3a00fd",
                  "id": 511,
                  "mutability": "mutable",
                  "name": "interestRate",
                  "nameLocation": "912:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "897:27:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2f7ab572",
                  "id": 514,
                  "mutability": "mutable",
                  "name": "maxPercentageForLoans",
                  "nameLocation": "997:21:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "982:43:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "38303030",
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1021:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8000_by_1",
                      "typeString": "int_const 8000"
                    },
                    "value": "8000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f5521bf1",
                  "id": 516,
                  "mutability": "mutable",
                  "name": "loanDuration",
                  "nameLocation": "1082:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1067:27:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cc952b57",
                  "id": 518,
                  "mutability": "mutable",
                  "name": "totalLoans",
                  "nameLocation": "1167:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1152:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1152:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "af310cc1",
                  "id": 521,
                  "mutability": "mutable",
                  "name": "maxNumberOfLendingsPerWallet",
                  "nameLocation": "1231:28:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1216:47:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1262:1:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "NFTLending.Loan",
                  "id": 534,
                  "members": [
                    {
                      "constant": false,
                      "id": 523,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "1372:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1364:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 522,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1364:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 525,
                      "mutability": "mutable",
                      "name": "nftAddress",
                      "nameLocation": "1426:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1418:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 524,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1418:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "nftId",
                      "nameLocation": "1489:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1481:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 526,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1481:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "loanAmount",
                      "nameLocation": "1539:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1531:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1531:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 531,
                      "mutability": "mutable",
                      "name": "loanStart",
                      "nameLocation": "1593:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1585:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 530,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1585:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 533,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "1660:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 534,
                      "src": "1655:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 532,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1655:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Loan",
                  "nameLocation": "1349:4:6",
                  "nodeType": "StructDefinition",
                  "scope": 1040,
                  "src": "1342:372:6",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e1ec3c68",
                  "id": 539,
                  "mutability": "mutable",
                  "name": "loans",
                  "nameLocation": "1752:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1720:37:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$534_storage_$",
                    "typeString": "mapping(uint256 => struct NFTLending.Loan)"
                  },
                  "typeName": {
                    "id": 538,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 535,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1728:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1720:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$534_storage_$",
                      "typeString": "mapping(uint256 => struct NFTLending.Loan)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 537,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 536,
                        "name": "Loan",
                        "nameLocations": [
                          "1739:4:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 534,
                        "src": "1739:4:6"
                      },
                      "referencedDeclaration": 534,
                      "src": "1739:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                        "typeString": "struct NFTLending.Loan"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6ef2dd35",
                  "id": 543,
                  "mutability": "mutable",
                  "name": "collateralizedNFTs",
                  "nameLocation": "1827:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1795:50:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                    "typeString": "mapping(uint256 => bool)"
                  },
                  "typeName": {
                    "id": 542,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 540,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1803:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1795:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                      "typeString": "mapping(uint256 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 541,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1814:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 547,
                  "mutability": "mutable",
                  "name": "loanCountPerWallet",
                  "nameLocation": "1959:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1040,
                  "src": "1931:46:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 546,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 544,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1939:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1931:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 545,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1950:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1804eb76dc9809be7ef188388aa1aeb765881fd848377be891234e5c584345fe",
                  "id": 557,
                  "name": "LoanCreated",
                  "nameLocation": "2080:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 549,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "borrower",
                        "nameLocation": "2108:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2092:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2092:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "loanId",
                        "nameLocation": "2134:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2118:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2118:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 553,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftId",
                        "nameLocation": "2150:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2142:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "loanAmount",
                        "nameLocation": "2165:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "2157:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2157:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2091:85:6"
                  },
                  "src": "2074:103:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698",
                  "id": 565,
                  "name": "LoanRepaid",
                  "nameLocation": "2188:10:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 559,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "borrower",
                        "nameLocation": "2215:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "2199:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 558,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2199:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 561,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "loanId",
                        "nameLocation": "2241:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "2225:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 560,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2225:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 563,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftId",
                        "nameLocation": "2257:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 565,
                        "src": "2249:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2249:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2198:65:6"
                  },
                  "src": "2182:82:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d93bbb9e10b7af5aa4b410ac845ae87a717d305e8a4777959ad1dd06e6a1ac98",
                  "id": 573,
                  "name": "NFTClaimed",
                  "nameLocation": "2275:10:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 567,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2302:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "2286:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2286:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 569,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "loanId",
                        "nameLocation": "2325:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "2309:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 568,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2309:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftId",
                        "nameLocation": "2341:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 573,
                        "src": "2333:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2333:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2285:62:6"
                  },
                  "src": "2269:79:6"
                },
                {
                  "errorSelector": "79f076cb",
                  "id": 575,
                  "name": "TooManyLoans",
                  "nameLocation": "2374:12:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 574,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2386:2:6"
                  },
                  "src": "2368:21:6"
                },
                {
                  "errorSelector": "786e0a99",
                  "id": 577,
                  "name": "InsufficientContractBalance",
                  "nameLocation": "2400:27:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2427:2:6"
                  },
                  "src": "2394:36:6"
                },
                {
                  "errorSelector": "9737d53c",
                  "id": 579,
                  "name": "UnauthorizedTransfer",
                  "nameLocation": "2441:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2461:2:6"
                  },
                  "src": "2435:29:6"
                },
                {
                  "errorSelector": "90b8ec18",
                  "id": 581,
                  "name": "TransferFailed",
                  "nameLocation": "2475:14:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2489:2:6"
                  },
                  "src": "2469:23:6"
                },
                {
                  "errorSelector": "12734164",
                  "id": 583,
                  "name": "LoanDeactive",
                  "nameLocation": "2503:12:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2515:2:6"
                  },
                  "src": "2497:21:6"
                },
                {
                  "errorSelector": "984252a4",
                  "id": 585,
                  "name": "LoanNotExpired",
                  "nameLocation": "2529:14:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2543:2:6"
                  },
                  "src": "2523:23:6"
                },
                {
                  "errorSelector": "5dc919ca",
                  "id": 587,
                  "name": "LoanExpired",
                  "nameLocation": "2557:11:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2568:2:6"
                  },
                  "src": "2551:20:6"
                },
                {
                  "errorSelector": "5bf1f5fd",
                  "id": 589,
                  "name": "LoanAmountTooHigh",
                  "nameLocation": "2582:17:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2599:2:6"
                  },
                  "src": "2576:26:6"
                },
                {
                  "errorSelector": "a3bb6180",
                  "id": 591,
                  "name": "UnauthorizedBorrower",
                  "nameLocation": "2613:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2633:2:6"
                  },
                  "src": "2607:29:6"
                },
                {
                  "errorSelector": "30cd7471",
                  "id": 593,
                  "name": "NotOwner",
                  "nameLocation": "2647:8:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 592,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2655:2:6"
                  },
                  "src": "2641:17:6"
                },
                {
                  "errorSelector": "dd8276f6",
                  "id": 595,
                  "name": "AlreadyCollateralized",
                  "nameLocation": "2669:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 594,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2690:2:6"
                  },
                  "src": "2663:30:6"
                },
                {
                  "errorSelector": "5945ea56",
                  "id": 597,
                  "name": "InsufficientAmount",
                  "nameLocation": "2704:18:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2722:2:6"
                  },
                  "src": "2698:27:6"
                },
                {
                  "body": {
                    "id": 617,
                    "nodeType": "Block",
                    "src": "3024:83:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 609,
                            "name": "interestRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 511,
                            "src": "3034:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 610,
                            "name": "_interestRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "3049:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3034:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 612,
                        "nodeType": "ExpressionStatement",
                        "src": "3034:28:6"
                      },
                      {
                        "expression": {
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 613,
                            "name": "loanDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "3072:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 614,
                            "name": "_loanDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "3087:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3072:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 616,
                        "nodeType": "ExpressionStatement",
                        "src": "3072:28:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 598,
                    "nodeType": "StructuredDocumentation",
                    "src": "2731:211:6",
                    "text": " @dev Constructor to initialize the interest rate and loan duration\n @param _interestRate The interest rate in basis points\n @param _loanDuration The duration of the loan in seconds"
                  },
                  "id": 618,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 605,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3013:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3017:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3013:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 607,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 604,
                        "name": "Ownable",
                        "nameLocations": [
                          "3005:7:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "3005:7:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3005:19:6"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "_interestRate",
                        "nameLocation": "2967:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "2959:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2959:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "_loanDuration",
                        "nameLocation": "2990:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "2982:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2982:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2958:46:6"
                  },
                  "returnParameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3024:0:6"
                  },
                  "scope": 1040,
                  "src": "2947:160:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 760,
                    "nodeType": "Block",
                    "src": "3884:1395:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 636,
                                "name": "_nftId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "3926:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 633,
                                    "name": "_nftAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 621,
                                    "src": "3905:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 632,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 264,
                                  "src": "3897:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$264_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3897:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$264",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3918:7:6",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 197,
                              "src": "3897:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3897:36:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 638,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3937:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3941:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3937:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3897:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 644,
                        "nodeType": "IfStatement",
                        "src": "3894:72:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 641,
                              "name": "NotOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "3956:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3956:10:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 643,
                          "nodeType": "RevertStatement",
                          "src": "3949:17:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 647,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4061:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                ],
                                "id": 646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4053:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 645,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4053:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4053:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4067:7:6",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "4053:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 650,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "4077:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4053:35:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 655,
                        "nodeType": "IfStatement",
                        "src": "4050:76:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 652,
                              "name": "InsufficientContractBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "4097:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4097:29:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 654,
                          "nodeType": "RevertStatement",
                          "src": "4090:36:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 660,
                                "name": "_nftId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "4172:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 657,
                                    "name": "_nftAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 621,
                                    "src": "4147:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 656,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 264,
                                  "src": "4139:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$264_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4139:20:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721_$264",
                                  "typeString": "contract IERC721"
                                }
                              },
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4160:11:6",
                              "memberName": "getApproved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 253,
                              "src": "4139:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4139:40:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 664,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4191:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_NFTLending_$1040",
                                  "typeString": "contract NFTLending"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_NFTLending_$1040",
                                  "typeString": "contract NFTLending"
                                }
                              ],
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4183:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 662,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4183:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4183:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4139:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 670,
                        "nodeType": "IfStatement",
                        "src": "4136:91:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 667,
                              "name": "UnauthorizedTransfer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 579,
                              "src": "4205:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4205:22:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 669,
                          "nodeType": "RevertStatement",
                          "src": "4198:29:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 671,
                              "name": "loanCountPerWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4240:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 674,
                            "indexExpression": {
                              "expression": {
                                "id": 672,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4259:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4263:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4259:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4240:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 675,
                            "name": "maxNumberOfLendingsPerWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 521,
                            "src": "4274:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4240:62:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 680,
                        "nodeType": "IfStatement",
                        "src": "4237:88:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 677,
                              "name": "TooManyLoans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "4311:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4311:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 679,
                          "nodeType": "RevertStatement",
                          "src": "4304:21:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 681,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "4338:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 682,
                                  "name": "getNFTPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1015,
                                  "src": "4352:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4352:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 684,
                                "name": "maxPercentageForLoans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "4368:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4352:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130303030",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4392:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "src": "4352:45:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4338:59:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 692,
                        "nodeType": "IfStatement",
                        "src": "4335:90:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 689,
                              "name": "LoanAmountTooHigh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "4406:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4406:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 691,
                          "nodeType": "RevertStatement",
                          "src": "4399:26:6"
                        }
                      },
                      {
                        "assignments": [
                          695
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 695,
                            "mutability": "mutable",
                            "name": "newLoan",
                            "nameLocation": "4475:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 760,
                            "src": "4463:19:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$534_memory_ptr",
                              "typeString": "struct NFTLending.Loan"
                            },
                            "typeName": {
                              "id": 694,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 693,
                                "name": "Loan",
                                "nameLocations": [
                                  "4463:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 534,
                                "src": "4463:4:6"
                              },
                              "referencedDeclaration": 534,
                              "src": "4463:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 706,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 697,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4514:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 698,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4518:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4514:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 699,
                              "name": "_nftAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "4550:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "4582:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 701,
                              "name": "_loanAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "4614:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 702,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4650:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4656:9:6",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4650:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4689:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 696,
                            "name": "Loan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "4485:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Loan_$534_storage_ptr_$",
                              "typeString": "type(struct NFTLending.Loan storage pointer)"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "4504:8:6",
                            "4538:10:6",
                            "4575:5:6",
                            "4602:10:6",
                            "4639:9:6",
                            "4679:8:6"
                          ],
                          "names": [
                            "borrower",
                            "nftAddress",
                            "nftId",
                            "loanAmount",
                            "loanStart",
                            "isActive"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4485:219:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$534_memory_ptr",
                            "typeString": "struct NFTLending.Loan memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4463:241:6"
                      },
                      {
                        "expression": {
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4714:32:6",
                          "subExpression": {
                            "baseExpression": {
                              "id": 707,
                              "name": "loanCountPerWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "4714:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 710,
                            "indexExpression": {
                              "expression": {
                                "id": 708,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4733:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4737:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4733:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4714:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 712,
                        "nodeType": "ExpressionStatement",
                        "src": "4714:32:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 717,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4958:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4962:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4958:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 721,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4978:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                ],
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4970:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 719,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4970:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4970:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 723,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "4985:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 714,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 621,
                                  "src": "4932:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 713,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 264,
                                "src": "4924:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$264_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4924:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$264",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4945:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 229,
                            "src": "4924:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4924:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 725,
                        "nodeType": "ExpressionStatement",
                        "src": "4924:68:6"
                      },
                      {
                        "expression": {
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 726,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "5002:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$534_storage_$",
                                "typeString": "mapping(uint256 => struct NFTLending.Loan storage ref)"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "id": 727,
                              "name": "totalLoans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "5008:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5002:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$534_storage",
                              "typeString": "struct NFTLending.Loan storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 729,
                            "name": "newLoan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "5022:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$534_memory_ptr",
                              "typeString": "struct NFTLending.Loan memory"
                            }
                          },
                          "src": "5002:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$534_storage",
                            "typeString": "struct NFTLending.Loan storage ref"
                          }
                        },
                        "id": 731,
                        "nodeType": "ExpressionStatement",
                        "src": "5002:27:6"
                      },
                      {
                        "expression": {
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 732,
                              "name": "collateralizedNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "5039:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 734,
                            "indexExpression": {
                              "id": 733,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "5058:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5039:26:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5068:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5039:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "ExpressionStatement",
                        "src": "5039:33:6"
                      },
                      {
                        "expression": {
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5082:12:6",
                          "subExpression": {
                            "id": 738,
                            "name": "totalLoans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "5082:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "5082:12:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 744,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5172:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5176:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5172:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 743,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5164:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 742,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5164:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5164:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 747,
                              "name": "_loanAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "5185:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 741,
                            "name": "transferETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "5152:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5152:45:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 749,
                        "nodeType": "ExpressionStatement",
                        "src": "5152:45:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 751,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5224:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5228:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5224:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 753,
                                "name": "totalLoans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "5236:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5249:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5236:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 756,
                              "name": "_nftId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "5252:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 757,
                              "name": "_loanAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "5260:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 750,
                            "name": "LoanCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 557,
                            "src": "5212:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5212:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 759,
                        "nodeType": "EmitStatement",
                        "src": "5207:65:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 619,
                    "nodeType": "StructuredDocumentation",
                    "src": "3117:649:6",
                    "text": " @dev Function to create a loan by collateralizing an NFT\n @param _nftAddress The address of the NFT contract\n @param _nftId The token ID of the NFT\n @param _loanAmount The amount of the loan\n @notice The borrower must be the owner of the NFT\n @notice The NFT must be approved for transfer by the contract\n @notice The contract must have enough balance to transfer the loan amount\n @notice The loan amount must be less than the maximum percentage of the NFT price\n @notice The borrower can only have a maximum number of loans\n @notice The NFT must not be already collateralized"
                  },
                  "functionSelector": "488dd3e6",
                  "id": 761,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 628,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 627,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3858:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 444,
                        "src": "3858:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3858:12:6"
                    },
                    {
                      "id": 630,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 629,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "3871:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "3871:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3871:13:6"
                    }
                  ],
                  "name": "createLoan",
                  "nameLocation": "3780:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "_nftAddress",
                        "nameLocation": "3799:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 761,
                        "src": "3791:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3791:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 623,
                        "mutability": "mutable",
                        "name": "_nftId",
                        "nameLocation": "3820:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 761,
                        "src": "3812:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3812:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "_loanAmount",
                        "nameLocation": "3836:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 761,
                        "src": "3828:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3828:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3790:58:6"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3884:0:6"
                  },
                  "scope": 1040,
                  "src": "3771:1508:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 856,
                    "nodeType": "Block",
                    "src": "5521:706:6",
                    "statements": [
                      {
                        "assignments": [
                          773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 773,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "5544:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 856,
                            "src": "5531:17:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                              "typeString": "struct NFTLending.Loan"
                            },
                            "typeName": {
                              "id": 772,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 771,
                                "name": "Loan",
                                "nameLocations": [
                                  "5531:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 534,
                                "src": "5531:4:6"
                              },
                              "referencedDeclaration": 534,
                              "src": "5531:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 777,
                        "initialValue": {
                          "baseExpression": {
                            "id": 774,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "5551:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$534_storage_$",
                              "typeString": "mapping(uint256 => struct NFTLending.Loan storage ref)"
                            }
                          },
                          "id": 776,
                          "indexExpression": {
                            "id": 775,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 764,
                            "src": "5557:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5551:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$534_storage",
                            "typeString": "struct NFTLending.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5531:34:6"
                      },
                      {
                        "condition": {
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5578:14:6",
                          "subExpression": {
                            "expression": {
                              "id": 778,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "5579:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan storage pointer"
                              }
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5584:8:6",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 533,
                            "src": "5579:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 784,
                        "nodeType": "IfStatement",
                        "src": "5575:40:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 781,
                              "name": "LoanDeactive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "5601:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5601:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 783,
                          "nodeType": "RevertStatement",
                          "src": "5594:21:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 785,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "5628:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan storage pointer"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5633:8:6",
                            "memberName": "borrower",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 523,
                            "src": "5628:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 787,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5645:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5649:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5645:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5628:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 793,
                        "nodeType": "IfStatement",
                        "src": "5625:61:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 790,
                              "name": "UnauthorizedBorrower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "5664:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5664:22:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 792,
                          "nodeType": "RevertStatement",
                          "src": "5657:29:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 794,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5699:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5705:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5699:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 796,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "5717:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5722:9:6",
                              "memberName": "loanStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 531,
                              "src": "5717:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 798,
                              "name": "loanDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "5734:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5717:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5699:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 804,
                        "nodeType": "IfStatement",
                        "src": "5696:72:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 801,
                              "name": "LoanExpired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 587,
                              "src": "5755:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5755:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 803,
                          "nodeType": "RevertStatement",
                          "src": "5748:20:6"
                        }
                      },
                      {
                        "assignments": [
                          806
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 806,
                            "mutability": "mutable",
                            "name": "totalRepayment",
                            "nameLocation": "5786:14:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 856,
                            "src": "5778:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 805,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5778:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 811,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 808,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "5828:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 809,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5833:10:6",
                              "memberName": "loanAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 529,
                              "src": "5828:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 807,
                            "name": "calculateRepaymentAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "5803:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5803:41:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5778:66:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 812,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5857:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5861:5:6",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5857:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 814,
                            "name": "totalRepayment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "5869:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5857:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 819,
                        "nodeType": "IfStatement",
                        "src": "5854:58:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 816,
                              "name": "InsufficientAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "5892:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5892:20:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 818,
                          "nodeType": "RevertStatement",
                          "src": "5885:27:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 827,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6015:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                ],
                                "id": 826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6007:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 825,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6007:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 828,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6007:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 829,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6022:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6026:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6022:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 831,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "6034:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6039:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6034:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 821,
                                    "name": "loan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 773,
                                    "src": "5977:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                      "typeString": "struct NFTLending.Loan storage pointer"
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5982:10:6",
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 525,
                                  "src": "5977:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 820,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 264,
                                "src": "5969:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$264_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5969:24:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$264",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5994:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 229,
                            "src": "5969:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5969:76:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 834,
                        "nodeType": "ExpressionStatement",
                        "src": "5969:76:6"
                      },
                      {
                        "expression": {
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 835,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 773,
                              "src": "6092:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan storage pointer"
                              }
                            },
                            "id": 837,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6097:8:6",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 533,
                            "src": "6092:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6108:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6092:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "6092:21:6"
                      },
                      {
                        "expression": {
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 841,
                              "name": "collateralizedNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "6123:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 844,
                            "indexExpression": {
                              "expression": {
                                "id": 842,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "6142:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6147:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6142:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6123:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6156:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6123:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 847,
                        "nodeType": "ExpressionStatement",
                        "src": "6123:38:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 849,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6188:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6192:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6188:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 851,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 764,
                              "src": "6200:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 852,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 773,
                                "src": "6209:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 853,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6214:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6209:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 848,
                            "name": "LoanRepaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "6177:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6177:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "EmitStatement",
                        "src": "6172:48:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 762,
                    "nodeType": "StructuredDocumentation",
                    "src": "5285:151:6",
                    "text": " @dev Function to repay a loan by transferring the loan amount to the contract with interest\n @param _loanId The ID of the loan"
                  },
                  "functionSelector": "ab7b1c89",
                  "id": 857,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 767,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 766,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5494:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 444,
                        "src": "5494:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5494:12:6"
                    },
                    {
                      "id": 769,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 768,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "5507:13:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 336,
                        "src": "5507:13:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5507:13:6"
                    }
                  ],
                  "name": "repayLoan",
                  "nameLocation": "5450:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 765,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 764,
                        "mutability": "mutable",
                        "name": "_loanId",
                        "nameLocation": "5468:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 857,
                        "src": "5460:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5460:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5459:17:6"
                  },
                  "returnParameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5521:0:6"
                  },
                  "scope": 1040,
                  "src": "5441:786:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 926,
                    "nodeType": "Block",
                    "src": "6454:490:6",
                    "statements": [
                      {
                        "assignments": [
                          867
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 867,
                            "mutability": "mutable",
                            "name": "loan",
                            "nameLocation": "6477:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 926,
                            "src": "6464:17:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                              "typeString": "struct NFTLending.Loan"
                            },
                            "typeName": {
                              "id": 866,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 865,
                                "name": "Loan",
                                "nameLocations": [
                                  "6464:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 534,
                                "src": "6464:4:6"
                              },
                              "referencedDeclaration": 534,
                              "src": "6464:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 871,
                        "initialValue": {
                          "baseExpression": {
                            "id": 868,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "6484:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$534_storage_$",
                              "typeString": "mapping(uint256 => struct NFTLending.Loan storage ref)"
                            }
                          },
                          "id": 870,
                          "indexExpression": {
                            "id": 869,
                            "name": "_loanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 860,
                            "src": "6490:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6484:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$534_storage",
                            "typeString": "struct NFTLending.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6464:34:6"
                      },
                      {
                        "condition": {
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6511:14:6",
                          "subExpression": {
                            "expression": {
                              "id": 872,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "6512:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan storage pointer"
                              }
                            },
                            "id": 873,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6517:8:6",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 533,
                            "src": "6512:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 878,
                        "nodeType": "IfStatement",
                        "src": "6508:40:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 875,
                              "name": "LoanDeactive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "6534:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6534:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 877,
                          "nodeType": "RevertStatement",
                          "src": "6527:21:6"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 879,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6561:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6567:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6561:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 881,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "6579:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6584:9:6",
                              "memberName": "loanStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 531,
                              "src": "6579:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 883,
                              "name": "loanDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "6596:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6579:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6561:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 889,
                        "nodeType": "IfStatement",
                        "src": "6558:75:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 886,
                              "name": "LoanNotExpired",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 585,
                              "src": "6617:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6617:16:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 888,
                          "nodeType": "RevertStatement",
                          "src": "6610:23:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 897,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6739:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6731:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6731:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6731:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 899,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "6746:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6746:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 901,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "6755:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 902,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6760:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6755:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 891,
                                    "name": "loan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 867,
                                    "src": "6697:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                      "typeString": "struct NFTLending.Loan storage pointer"
                                    }
                                  },
                                  "id": 892,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6702:10:6",
                                  "memberName": "nftAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 525,
                                  "src": "6697:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 890,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 264,
                                "src": "6689:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$264_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6689:24:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$264",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6714:16:6",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 219,
                            "src": "6689:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6689:77:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "6689:77:6"
                      },
                      {
                        "expression": {
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 905,
                              "name": "loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "6813:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                "typeString": "struct NFTLending.Loan storage pointer"
                              }
                            },
                            "id": 907,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6818:8:6",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 533,
                            "src": "6813:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6829:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6813:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 910,
                        "nodeType": "ExpressionStatement",
                        "src": "6813:21:6"
                      },
                      {
                        "expression": {
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 911,
                              "name": "collateralizedNFTs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "6844:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 914,
                            "indexExpression": {
                              "expression": {
                                "id": 912,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "6863:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 913,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6868:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6863:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6844:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6877:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6844:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 917,
                        "nodeType": "ExpressionStatement",
                        "src": "6844:38:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 919,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67,
                                "src": "6908:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6908:7:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 921,
                              "name": "_loanId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 860,
                              "src": "6917:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 922,
                                "name": "loan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 867,
                                "src": "6926:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$534_storage_ptr",
                                  "typeString": "struct NFTLending.Loan storage pointer"
                                }
                              },
                              "id": 923,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6931:5:6",
                              "memberName": "nftId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 527,
                              "src": "6926:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 918,
                            "name": "NFTClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 573,
                            "src": "6897:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6897:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 925,
                        "nodeType": "EmitStatement",
                        "src": "6892:45:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 858,
                    "nodeType": "StructuredDocumentation",
                    "src": "6233:162:6",
                    "text": " @dev Function to claim an NFT by the contract owner if the loan is not repaid within the loan duration\n @param _loanId The ID of the loan"
                  },
                  "functionSelector": "fe5c873a",
                  "id": 927,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 863,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 862,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6444:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6444:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6444:9:6"
                    }
                  ],
                  "name": "claimNFT",
                  "nameLocation": "6409:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 861,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 860,
                        "mutability": "mutable",
                        "name": "_loanId",
                        "nameLocation": "6426:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 927,
                        "src": "6418:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 859,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6418:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6417:17:6"
                  },
                  "returnParameters": {
                    "id": 864,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6454:0:6"
                  },
                  "scope": 1040,
                  "src": "6400:544:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 945,
                    "nodeType": "Block",
                    "src": "7225:76:6",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 935,
                            "name": "_loanAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 930,
                            "src": "7242:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 938,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 936,
                                        "name": "_loanAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 930,
                                        "src": "7258:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 937,
                                        "name": "interestRate",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 511,
                                        "src": "7272:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7258:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 939,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "7257:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "3130303030",
                                  "id": 940,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7288:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "src": "7257:36:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 942,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7256:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7242:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 934,
                        "id": 944,
                        "nodeType": "Return",
                        "src": "7235:59:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 928,
                    "nodeType": "StructuredDocumentation",
                    "src": "6950:185:6",
                    "text": " @dev Function to calculate the repayment amount with interest\n @param _loanAmount The amount of the loan\n @return The total repayment amount with interest"
                  },
                  "functionSelector": "b1197239",
                  "id": 946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateRepaymentAmount",
                  "nameLocation": "7149:24:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "_loanAmount",
                        "nameLocation": "7182:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "7174:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7174:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7173:21:6"
                  },
                  "returnParameters": {
                    "id": 934,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 946,
                        "src": "7216:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7216:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7215:9:6"
                  },
                  "scope": 1040,
                  "src": "7140:161:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 952,
                    "nodeType": "Block",
                    "src": "7459:7:6",
                    "statements": []
                  },
                  "documentation": {
                    "id": 947,
                    "nodeType": "StructuredDocumentation",
                    "src": "7307:96:6",
                    "text": " @dev Function to deposit ETH into the contract to provide liquidity for loans"
                  },
                  "functionSelector": "e2c41dbc",
                  "id": 953,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 950,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 949,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7449:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7449:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7449:9:6"
                    }
                  ],
                  "name": "depositFunds",
                  "nameLocation": "7417:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7429:2:6"
                  },
                  "returnParameters": {
                    "id": 951,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7459:0:6"
                  },
                  "scope": 1040,
                  "src": "7408:58:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 981,
                    "nodeType": "Block",
                    "src": "7725:137:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 961,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 956,
                            "src": "7738:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 964,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7756:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTLending_$1040",
                                    "typeString": "contract NFTLending"
                                  }
                                ],
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7748:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 962,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7748:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7748:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7762:7:6",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "7748:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7738:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 971,
                        "nodeType": "IfStatement",
                        "src": "7735:72:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 968,
                              "name": "InsufficientContractBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "7778:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7778:29:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 970,
                          "nodeType": "RevertStatement",
                          "src": "7771:36:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 975,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 67,
                                    "src": "7837:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7837:7:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7829:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 973,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7829:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 977,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7829:16:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 978,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "7847:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 972,
                            "name": "transferETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1006,
                            "src": "7817:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7817:38:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 980,
                        "nodeType": "ExpressionStatement",
                        "src": "7817:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 954,
                    "nodeType": "StructuredDocumentation",
                    "src": "7472:189:6",
                    "text": " @dev Function to withdraw ETH from the contract\n @param _amount The amount of ETH to withdraw\n @notice The contract owner can withdraw funds from the contract"
                  },
                  "functionSelector": "155dd5ee",
                  "id": 982,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 959,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 958,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7715:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "7715:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7715:9:6"
                    }
                  ],
                  "name": "withdrawFunds",
                  "nameLocation": "7675:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 957,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 956,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "7697:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "7689:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 955,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7689:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7688:17:6"
                  },
                  "returnParameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7725:0:6"
                  },
                  "scope": 1040,
                  "src": "7666:196:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1005,
                    "nodeType": "Block",
                    "src": "8162:233:6",
                    "statements": [
                      {
                        "assignments": [
                          991,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 991,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "8307:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1005,
                            "src": "8302:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 990,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8302:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 998,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8342:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 992,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "8317:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8321:4:6",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "8317:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 994,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 987,
                                "src": "8333:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "8317:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8317:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8301:44:6"
                      },
                      {
                        "condition": {
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8358:5:6",
                          "subExpression": {
                            "id": 999,
                            "name": "sent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "8359:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1004,
                        "nodeType": "IfStatement",
                        "src": "8355:33:6",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1001,
                              "name": "TransferFailed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 581,
                              "src": "8372:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8372:16:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1003,
                          "nodeType": "RevertStatement",
                          "src": "8365:23:6"
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 983,
                    "nodeType": "StructuredDocumentation",
                    "src": "7868:221:6",
                    "text": " @dev Transfer ETH to given address\n @param _to The address to transfer ETH\n @param _amount The amount of ETH to transfer\n @notice This function is used to transfer ETH to given address"
                  },
                  "id": 1006,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferETH",
                  "nameLocation": "8103:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 988,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 985,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "8131:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "8115:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 984,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8115:15:6",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 987,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "8144:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1006,
                        "src": "8136:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 986,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8136:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8114:38:6"
                  },
                  "returnParameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8162:0:6"
                  },
                  "scope": 1040,
                  "src": "8094:301:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1014,
                    "nodeType": "Block",
                    "src": "8655:27:6",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "313030",
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8672:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "functionReturnParameters": 1011,
                        "id": 1013,
                        "nodeType": "Return",
                        "src": "8665:10:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1007,
                    "nodeType": "StructuredDocumentation",
                    "src": "8401:196:6",
                    "text": " @dev Get the price of the NFT\n @return The price of the NFT\n @notice This function is used to get the price of the NFT, can be improved by connecting it to an oracle"
                  },
                  "functionSelector": "fb107a4f",
                  "id": 1015,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNFTPrice",
                  "nameLocation": "8611:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8622:2:6"
                  },
                  "returnParameters": {
                    "id": 1011,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1010,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1015,
                        "src": "8646:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8646:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8645:9:6"
                  },
                  "scope": 1040,
                  "src": "8602:80:6",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1019,
                    "nodeType": "Block",
                    "src": "8775:2:6",
                    "statements": []
                  },
                  "documentation": {
                    "id": 1016,
                    "nodeType": "StructuredDocumentation",
                    "src": "8688:55:6",
                    "text": " @dev Fallback function to accept ETH"
                  },
                  "id": 1020,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8755:2:6"
                  },
                  "returnParameters": {
                    "id": 1018,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8775:0:6"
                  },
                  "scope": 1040,
                  "src": "8748:29:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1038,
                    "nodeType": "Block",
                    "src": "8945:99:6",
                    "statements": [
                      {
                        "condition": {
                          "id": 1028,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1023,
                          "src": "8958:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1034,
                        "nodeType": "IfStatement",
                        "src": "8955:63:6",
                        "trueBody": {
                          "id": 1033,
                          "nodeType": "Block",
                          "src": "8965:53:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1029,
                                  "name": "_pause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 394,
                                  "src": "8979:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8979:8:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1031,
                              "nodeType": "ExpressionStatement",
                              "src": "8979:8:6"
                            },
                            {
                              "functionReturnParameters": 1027,
                              "id": 1032,
                              "nodeType": "Return",
                              "src": "9001:7:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1035,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "9027:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9027:10:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1037,
                        "nodeType": "ExpressionStatement",
                        "src": "9027:10:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1021,
                    "nodeType": "StructuredDocumentation",
                    "src": "8783:111:6",
                    "text": " @dev Function to pause the contract\n @notice The contract owner can pause the contract"
                  },
                  "functionSelector": "02329a29",
                  "id": 1039,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1026,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1025,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "8935:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "8935:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8935:9:6"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "8908:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1024,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1023,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8919:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1039,
                        "src": "8914:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1022,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8914:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8913:12:6"
                  },
                  "returnParameters": {
                    "id": 1027,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8945:0:6"
                  },
                  "scope": 1040,
                  "src": "8899:145:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1041,
              "src": "828:8218:6",
              "usedErrors": [
                13,
                18,
                316,
                319,
                425,
                575,
                577,
                579,
                581,
                583,
                585,
                587,
                589,
                591,
                593,
                595,
                597
              ],
              "usedEvents": [
                24,
                308,
                313,
                557,
                565,
                573
              ]
            }
          ],
          "src": "32:9014:6"
        },
        "id": 6
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}"
        }
      },
      "contracts/NFTLending.sol": {
        "NFTLending": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_interestRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_loanDuration",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AlreadyCollateralized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientContractBalance",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "LoanAmountTooHigh",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "LoanDeactive",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "LoanExpired",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "LoanNotExpired",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TooManyLoans",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TransferFailed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnauthorizedBorrower",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UnauthorizedTransfer",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "nftId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "loanAmount",
                  "type": "uint256"
                }
              ],
              "name": "LoanCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "nftId",
                  "type": "uint256"
                }
              ],
              "name": "LoanRepaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "nftId",
                  "type": "uint256"
                }
              ],
              "name": "NFTClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_loanAmount",
                  "type": "uint256"
                }
              ],
              "name": "calculateRepaymentAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_loanId",
                  "type": "uint256"
                }
              ],
              "name": "claimNFT",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "collateralizedNFTs",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_nftAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_nftId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_loanAmount",
                  "type": "uint256"
                }
              ],
              "name": "createLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "depositFunds",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNFTPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "interestRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "loanDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "loans",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "nftAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nftId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanStart",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxNumberOfLendingsPerWallet",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maxPercentageForLoans",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "value",
                  "type": "bool"
                }
              ],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_loanId",
                  "type": "uint256"
                }
              ],
              "name": "repayLoan",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalLoans",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawFunds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_328": {
                  "entryPoint": null,
                  "id": 328,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_433": {
                  "entryPoint": null,
                  "id": 433,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_618": {
                  "entryPoint": null,
                  "id": 618,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 135,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_uint256t_uint256_fromMemory": {
                  "entryPoint": 225,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:469:7",
                    "nodeType": "YulBlock",
                    "src": "0:469:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "112:147:7",
                          "nodeType": "YulBlock",
                          "src": "112:147:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "158:16:7",
                                "nodeType": "YulBlock",
                                "src": "158:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "167:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "167:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "170:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "170:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "160:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "160:6:7"
                                      },
                                      "nativeSrc": "160:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "160:12:7"
                                    },
                                    "nativeSrc": "160:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "160:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "133:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "133:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "142:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "142:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "129:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "129:3:7"
                                    },
                                    "nativeSrc": "129:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "129:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "154:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "154:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "125:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:3:7"
                                },
                                "nativeSrc": "125:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "125:32:7"
                              },
                              "nativeSrc": "122:52:7",
                              "nodeType": "YulIf",
                              "src": "122:52:7"
                            },
                            {
                              "nativeSrc": "183:26:7",
                              "nodeType": "YulAssignment",
                              "src": "183:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "199:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "199:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "193:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "193:5:7"
                                },
                                "nativeSrc": "193:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "193:16:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "183:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "183:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "218:35:7",
                              "nodeType": "YulAssignment",
                              "src": "218:35:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "238:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "238:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "249:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "249:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "234:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "234:3:7"
                                    },
                                    "nativeSrc": "234:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "234:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "228:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:5:7"
                                },
                                "nativeSrc": "228:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "228:25:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "218:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "218:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
                        "nativeSrc": "14:245:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "70:9:7",
                            "nodeType": "YulTypedName",
                            "src": "70:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "81:7:7",
                            "nodeType": "YulTypedName",
                            "src": "81:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "93:6:7",
                            "nodeType": "YulTypedName",
                            "src": "93:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "101:6:7",
                            "nodeType": "YulTypedName",
                            "src": "101:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:245:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "365:102:7",
                          "nodeType": "YulBlock",
                          "src": "365:102:7",
                          "statements": [
                            {
                              "nativeSrc": "375:26:7",
                              "nodeType": "YulAssignment",
                              "src": "375:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "387:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "387:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "398:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "398:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "383:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "383:3:7"
                                },
                                "nativeSrc": "383:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "383:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "375:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "375:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "417:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "432:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "432:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "448:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "448:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "453:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "453:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "444:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "444:3:7"
                                            },
                                            "nativeSrc": "444:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "444:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "457:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "457:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "440:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "440:3:7"
                                        },
                                        "nativeSrc": "440:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "440:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "428:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "428:3:7"
                                    },
                                    "nativeSrc": "428:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "428:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "410:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:6:7"
                                },
                                "nativeSrc": "410:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "410:51:7"
                              },
                              "nativeSrc": "410:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "410:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "264:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "334:9:7",
                            "nodeType": "YulTypedName",
                            "src": "334:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "345:6:7",
                            "nodeType": "YulTypedName",
                            "src": "345:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "356:4:7",
                            "nodeType": "YulTypedName",
                            "src": "356:4:7",
                            "type": ""
                          }
                        ],
                        "src": "264:203:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1F40 PUSH1 0x3 SSTORE PUSH1 0x2 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x102E CODESIZE SUB DUP1 PUSH2 0x102E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3A SWAP2 PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER DUP1 PUSH2 0x6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78 DUP2 PUSH2 0x87 JUMP JUMPDEST POP PUSH1 0x2 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE PUSH2 0x105 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH2 0xF1A DUP1 PUSH2 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB7B1C89 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE2C41DBC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE2C41DBC EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xF5521BF1 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xFB107A4F EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xFE5C873A EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xAF310CC1 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xB1197239 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xCC952B57 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x6EF2DD35 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2329A29 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x2F7AB572 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x488DD3E6 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP7 SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x9BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0xB91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E5 PUSH2 0xBC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x3F8 PUSH2 0xB91 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0x43C PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x444 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25CDF54F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F076CB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x3 SLOAD PUSH2 0x5C8 PUSH1 0x64 SWAP1 JUMP JUMPDEST PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x5BF1F5FD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 PUSH2 0x650 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP4 SSTORE DUP5 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 DUP7 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP4 DUP5 AND OR SWAP1 SSTORE DUP11 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 SLOAD SWAP4 POP SWAP1 SWAP2 POP PUSH2 0x75B DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x76A CALLER DUP4 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1804EB76DC9809BE7EF188388AA1AEB765881FD848377BE891234E5C584345FE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x7BF PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7CC PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x0 PUSH2 0xD13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH4 0x49CD059 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH4 0x14776C3 PUSH1 0xE7 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2EE48CE5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x886 DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x991 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SLOAD SWAP1 MLOAD DUP6 SWAP3 POP CALLER SWAP2 PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 SWAP2 PUSH2 0x97D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x3E5 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x9B8 SWAP1 DUP4 PUSH2 0xED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E5 DUP2 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xA0E PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49CD059 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x261094A9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E ADDRESS PUSH2 0xA9F PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD93BBB9E10B7AF5AA4B410AC845AE87A717D305E8A4777959AD1DD06E6A1AC98 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB85 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0xBCC PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE07 DUP2 PUSH2 0xDD2 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB2 DUP2 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDB2 DUP2 PUSH2 0xDD2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xEB7 JUMPI PUSH2 0xEB7 PUSH2 0xE56 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xD1 0xE1 AND 0xC4 0x24 CALLER SWAP2 0xE5 PUSH26 0xA2882F34D72863617177B191D711DEAF11D6646BD7BE64736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "828:8218:6:-:0;;;1021:4;982:43;;1262:1;1216:47;;2947:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:4;1917:7;:21;;;1231:15:3;;-1:-1:-1;;1231:15:3;;;3013:10:6;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;410:51:7;383:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3034:12:6::1;:28:::0;;;;3072:12:::1;:28:::0;828:8218;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:245:7:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:7;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:7:o;264:203::-;828:8218:6;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_1020": {
                  "entryPoint": null,
                  "id": 1020,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_checkOwner_84": {
                  "entryPoint": 2961,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_276": {
                  "entryPoint": null,
                  "id": 276,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_nonReentrantAfter_468": {
                  "entryPoint": null,
                  "id": 468,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_nonReentrantBefore_460": {
                  "entryPoint": 3269,
                  "id": 460,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_pause_394": {
                  "entryPoint": 3012,
                  "id": 394,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requireNotPaused_365": {
                  "entryPoint": 3311,
                  "id": 365,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requirePaused_378": {
                  "entryPoint": 3437,
                  "id": 378,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 3347,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_unpause_410": {
                  "entryPoint": 3096,
                  "id": 410,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@calculateRepaymentAmount_946": {
                  "entryPoint": 2449,
                  "id": 946,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@claimNFT_927": {
                  "entryPoint": 2566,
                  "id": 927,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@collateralizedNFTs_543": {
                  "entryPoint": null,
                  "id": 543,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@createLoan_761": {
                  "entryPoint": 1076,
                  "id": 761,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@depositFunds_953": {
                  "entryPoint": 2494,
                  "id": 953,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@getNFTPrice_1015": {
                  "entryPoint": null,
                  "id": 1015,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@interestRate_511": {
                  "entryPoint": null,
                  "id": 511,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@loanDuration_516": {
                  "entryPoint": null,
                  "id": 516,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@loans_539": {
                  "entryPoint": null,
                  "id": 539,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@maxNumberOfLendingsPerWallet_521": {
                  "entryPoint": null,
                  "id": 521,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@maxPercentageForLoans_514": {
                  "entryPoint": null,
                  "id": 514,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pause_1039": {
                  "entryPoint": 975,
                  "id": 1039,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@paused_353": {
                  "entryPoint": null,
                  "id": 353,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@renounceOwnership_98": {
                  "entryPoint": 1988,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@repayLoan_857": {
                  "entryPoint": 2008,
                  "id": 857,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@totalLoans_518": {
                  "entryPoint": null,
                  "id": 518,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferETH_1006": {
                  "entryPoint": 3153,
                  "id": 1006,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 2502,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@withdrawFunds_982": {
                  "entryPoint": 1008,
                  "id": 982,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 3612,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 3641,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_uint256t_uint256": {
                  "entryPoint": 3559,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_bool": {
                  "entryPoint": 3472,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 3513,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3793,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 3715,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 3692,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3774,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 3749,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 3670,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 3538,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:4467:7",
                    "nodeType": "YulBlock",
                    "src": "0:4467:7",
                    "statements": [
                      {
                        "nativeSrc": "6:3:7",
                        "nodeType": "YulBlock",
                        "src": "6:3:7",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "81:206:7",
                          "nodeType": "YulBlock",
                          "src": "81:206:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "127:16:7",
                                "nodeType": "YulBlock",
                                "src": "127:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "136:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "136:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "139:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "129:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "129:6:7"
                                      },
                                      "nativeSrc": "129:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "129:12:7"
                                    },
                                    "nativeSrc": "129:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "129:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "102:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "102:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "111:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "111:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "98:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "98:3:7"
                                    },
                                    "nativeSrc": "98:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "98:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "123:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "123:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "94:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "94:3:7"
                                },
                                "nativeSrc": "94:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "94:32:7"
                              },
                              "nativeSrc": "91:52:7",
                              "nodeType": "YulIf",
                              "src": "91:52:7"
                            },
                            {
                              "nativeSrc": "152:36:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "152:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "178:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "178:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "165:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "165:12:7"
                                },
                                "nativeSrc": "165:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "165:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "156:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "156:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "241:16:7",
                                "nodeType": "YulBlock",
                                "src": "241:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "250:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "250:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "253:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "253:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "243:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "243:6:7"
                                      },
                                      "nativeSrc": "243:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "243:12:7"
                                    },
                                    "nativeSrc": "243:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "243:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "210:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "210:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nativeSrc": "231:5:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "231:5:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nativeSrc": "224:6:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "224:6:7"
                                            },
                                            "nativeSrc": "224:13:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "224:13:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "217:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "217:6:7"
                                        },
                                        "nativeSrc": "217:21:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "217:21:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "207:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "207:2:7"
                                    },
                                    "nativeSrc": "207:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "207:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "200:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "200:6:7"
                                },
                                "nativeSrc": "200:40:7",
                                "nodeType": "YulFunctionCall",
                                "src": "200:40:7"
                              },
                              "nativeSrc": "197:60:7",
                              "nodeType": "YulIf",
                              "src": "197:60:7"
                            },
                            {
                              "nativeSrc": "266:15:7",
                              "nodeType": "YulAssignment",
                              "src": "266:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "276:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "276:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "266:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "266:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nativeSrc": "14:273:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "47:9:7",
                            "nodeType": "YulTypedName",
                            "src": "47:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "58:7:7",
                            "nodeType": "YulTypedName",
                            "src": "58:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "70:6:7",
                            "nodeType": "YulTypedName",
                            "src": "70:6:7",
                            "type": ""
                          }
                        ],
                        "src": "14:273:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "362:110:7",
                          "nodeType": "YulBlock",
                          "src": "362:110:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "408:16:7",
                                "nodeType": "YulBlock",
                                "src": "408:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "417:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "417:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "420:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "420:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "410:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "410:6:7"
                                      },
                                      "nativeSrc": "410:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "410:12:7"
                                    },
                                    "nativeSrc": "410:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "410:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "383:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "383:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "392:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "392:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "379:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "379:3:7"
                                    },
                                    "nativeSrc": "379:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "379:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "404:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "404:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "375:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "375:3:7"
                                },
                                "nativeSrc": "375:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "375:32:7"
                              },
                              "nativeSrc": "372:52:7",
                              "nodeType": "YulIf",
                              "src": "372:52:7"
                            },
                            {
                              "nativeSrc": "433:33:7",
                              "nodeType": "YulAssignment",
                              "src": "433:33:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "456:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "456:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "443:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "443:12:7"
                                },
                                "nativeSrc": "443:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "443:23:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "433:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "292:180:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "328:9:7",
                            "nodeType": "YulTypedName",
                            "src": "328:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "339:7:7",
                            "nodeType": "YulTypedName",
                            "src": "339:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "351:6:7",
                            "nodeType": "YulTypedName",
                            "src": "351:6:7",
                            "type": ""
                          }
                        ],
                        "src": "292:180:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "578:76:7",
                          "nodeType": "YulBlock",
                          "src": "578:76:7",
                          "statements": [
                            {
                              "nativeSrc": "588:26:7",
                              "nodeType": "YulAssignment",
                              "src": "588:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "600:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "600:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "611:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "611:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "596:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "596:3:7"
                                },
                                "nativeSrc": "596:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "596:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "588:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "588:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "630:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "630:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "641:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "641:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "623:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "623:6:7"
                                },
                                "nativeSrc": "623:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "623:25:7"
                              },
                              "nativeSrc": "623:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "623:25:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "477:177:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "547:9:7",
                            "nodeType": "YulTypedName",
                            "src": "547:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "558:6:7",
                            "nodeType": "YulTypedName",
                            "src": "558:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "569:4:7",
                            "nodeType": "YulTypedName",
                            "src": "569:4:7",
                            "type": ""
                          }
                        ],
                        "src": "477:177:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "704:86:7",
                          "nodeType": "YulBlock",
                          "src": "704:86:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "768:16:7",
                                "nodeType": "YulBlock",
                                "src": "768:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "777:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "777:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "780:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "780:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "770:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "770:6:7"
                                      },
                                      "nativeSrc": "770:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "770:12:7"
                                    },
                                    "nativeSrc": "770:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "770:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "727:5:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:5:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "738:5:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "738:5:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "753:3:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "753:3:7",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "758:1:7",
                                                    "nodeType": "YulLiteral",
                                                    "src": "758:1:7",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "749:3:7",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "749:3:7"
                                                },
                                                "nativeSrc": "749:11:7",
                                                "nodeType": "YulFunctionCall",
                                                "src": "749:11:7"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "762:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "762:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "745:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "745:3:7"
                                            },
                                            "nativeSrc": "745:19:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "745:19:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "734:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "734:3:7"
                                        },
                                        "nativeSrc": "734:31:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "734:31:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "724:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "724:2:7"
                                    },
                                    "nativeSrc": "724:42:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "724:42:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "717:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:6:7"
                                },
                                "nativeSrc": "717:50:7",
                                "nodeType": "YulFunctionCall",
                                "src": "717:50:7"
                              },
                              "nativeSrc": "714:70:7",
                              "nodeType": "YulIf",
                              "src": "714:70:7"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nativeSrc": "659:131:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "693:5:7",
                            "nodeType": "YulTypedName",
                            "src": "693:5:7",
                            "type": ""
                          }
                        ],
                        "src": "659:131:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "899:279:7",
                          "nodeType": "YulBlock",
                          "src": "899:279:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "945:16:7",
                                "nodeType": "YulBlock",
                                "src": "945:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "954:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "954:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "957:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "957:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "947:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "947:6:7"
                                      },
                                      "nativeSrc": "947:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "947:12:7"
                                    },
                                    "nativeSrc": "947:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "947:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "920:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "920:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "929:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "929:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "916:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "916:3:7"
                                    },
                                    "nativeSrc": "916:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "916:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "941:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "941:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "912:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:3:7"
                                },
                                "nativeSrc": "912:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "912:32:7"
                              },
                              "nativeSrc": "909:52:7",
                              "nodeType": "YulIf",
                              "src": "909:52:7"
                            },
                            {
                              "nativeSrc": "970:36:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "970:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "996:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "996:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "983:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "983:12:7"
                                },
                                "nativeSrc": "983:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "983:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "974:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "974:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "1040:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1040:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "1015:24:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1015:24:7"
                                },
                                "nativeSrc": "1015:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1015:31:7"
                              },
                              "nativeSrc": "1015:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1015:31:7"
                            },
                            {
                              "nativeSrc": "1055:15:7",
                              "nodeType": "YulAssignment",
                              "src": "1055:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1065:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "1065:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1055:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1055:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1079:42:7",
                              "nodeType": "YulAssignment",
                              "src": "1079:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1106:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1106:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1117:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1117:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1102:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1102:3:7"
                                    },
                                    "nativeSrc": "1102:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1102:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1089:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1089:12:7"
                                },
                                "nativeSrc": "1089:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1089:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1079:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1079:6:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1130:42:7",
                              "nodeType": "YulAssignment",
                              "src": "1130:42:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1157:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1157:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1168:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1168:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1153:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1153:3:7"
                                    },
                                    "nativeSrc": "1153:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1153:18:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1140:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1140:12:7"
                                },
                                "nativeSrc": "1140:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1140:32:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "1130:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1130:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
                        "nativeSrc": "795:383:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "849:9:7",
                            "nodeType": "YulTypedName",
                            "src": "849:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "860:7:7",
                            "nodeType": "YulTypedName",
                            "src": "860:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "872:6:7",
                            "nodeType": "YulTypedName",
                            "src": "872:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "880:6:7",
                            "nodeType": "YulTypedName",
                            "src": "880:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "888:6:7",
                            "nodeType": "YulTypedName",
                            "src": "888:6:7",
                            "type": ""
                          }
                        ],
                        "src": "795:383:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1278:92:7",
                          "nodeType": "YulBlock",
                          "src": "1278:92:7",
                          "statements": [
                            {
                              "nativeSrc": "1288:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1288:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1300:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1300:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1311:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1311:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1296:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1296:3:7"
                                },
                                "nativeSrc": "1296:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1296:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1288:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1288:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1330:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1330:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "1355:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "1355:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "1348:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1348:6:7"
                                        },
                                        "nativeSrc": "1348:14:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1348:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "1341:6:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1341:6:7"
                                    },
                                    "nativeSrc": "1341:22:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1341:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1323:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1323:6:7"
                                },
                                "nativeSrc": "1323:41:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1323:41:7"
                              },
                              "nativeSrc": "1323:41:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1323:41:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "1183:187:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1247:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1247:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1258:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1258:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1269:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1269:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1183:187:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1476:102:7",
                          "nodeType": "YulBlock",
                          "src": "1476:102:7",
                          "statements": [
                            {
                              "nativeSrc": "1486:26:7",
                              "nodeType": "YulAssignment",
                              "src": "1486:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1498:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1498:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1509:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1509:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1494:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1494:3:7"
                                },
                                "nativeSrc": "1494:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1494:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1486:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1528:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1528:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1543:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1543:6:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1559:3:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1559:3:7",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1564:1:7",
                                                "nodeType": "YulLiteral",
                                                "src": "1564:1:7",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "1555:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "1555:3:7"
                                            },
                                            "nativeSrc": "1555:11:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1555:11:7"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1568:1:7",
                                            "nodeType": "YulLiteral",
                                            "src": "1568:1:7",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "1551:3:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "1551:3:7"
                                        },
                                        "nativeSrc": "1551:19:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1551:19:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1539:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1539:3:7"
                                    },
                                    "nativeSrc": "1539:32:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1539:32:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1521:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1521:6:7"
                                },
                                "nativeSrc": "1521:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1521:51:7"
                              },
                              "nativeSrc": "1521:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1521:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "1375:203:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1445:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1445:9:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1456:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1456:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1467:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1467:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1375:203:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "1818:366:7",
                          "nodeType": "YulBlock",
                          "src": "1818:366:7",
                          "statements": [
                            {
                              "nativeSrc": "1828:27:7",
                              "nodeType": "YulAssignment",
                              "src": "1828:27:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1840:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1840:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1851:3:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1851:3:7",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1836:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1836:3:7"
                                },
                                "nativeSrc": "1836:19:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1836:19:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1828:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1828:4:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1864:29:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1864:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1882:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1882:3:7",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1887:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1887:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1878:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1878:3:7"
                                    },
                                    "nativeSrc": "1878:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1878:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1891:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "1891:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "1874:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1874:3:7"
                                },
                                "nativeSrc": "1874:19:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1874:19:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "1868:2:7",
                                  "nodeType": "YulTypedName",
                                  "src": "1868:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1909:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "1909:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "1924:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1924:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1932:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1932:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1920:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1920:3:7"
                                    },
                                    "nativeSrc": "1920:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1920:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1902:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1902:6:7"
                                },
                                "nativeSrc": "1902:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1902:34:7"
                              },
                              "nativeSrc": "1902:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1902:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1956:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1956:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1967:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "1967:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1952:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1952:3:7"
                                    },
                                    "nativeSrc": "1952:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1952:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "1976:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1976:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1984:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "1984:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1972:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1972:3:7"
                                    },
                                    "nativeSrc": "1972:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1972:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1945:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1945:6:7"
                                },
                                "nativeSrc": "1945:43:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1945:43:7"
                              },
                              "nativeSrc": "1945:43:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1945:43:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2008:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2008:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2019:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2019:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2004:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2004:3:7"
                                    },
                                    "nativeSrc": "2004:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2004:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "2024:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2024:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1997:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "1997:6:7"
                                },
                                "nativeSrc": "1997:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "1997:34:7"
                              },
                              "nativeSrc": "1997:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "1997:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2051:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2051:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2062:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2062:2:7",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2047:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2047:3:7"
                                    },
                                    "nativeSrc": "2047:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2047:18:7"
                                  },
                                  {
                                    "name": "value3",
                                    "nativeSrc": "2067:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2067:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2040:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2040:6:7"
                                },
                                "nativeSrc": "2040:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2040:34:7"
                              },
                              "nativeSrc": "2040:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2040:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2094:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2094:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2105:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2105:3:7",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2090:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2090:3:7"
                                    },
                                    "nativeSrc": "2090:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2090:19:7"
                                  },
                                  {
                                    "name": "value4",
                                    "nativeSrc": "2111:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2111:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2083:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2083:6:7"
                                },
                                "nativeSrc": "2083:35:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2083:35:7"
                              },
                              "nativeSrc": "2083:35:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2083:35:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2138:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2138:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2149:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2149:3:7",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2134:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2134:3:7"
                                    },
                                    "nativeSrc": "2134:19:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2134:19:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value5",
                                            "nativeSrc": "2169:6:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2169:6:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "2162:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2162:6:7"
                                        },
                                        "nativeSrc": "2162:14:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2162:14:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "2155:6:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2155:6:7"
                                    },
                                    "nativeSrc": "2155:22:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2155:22:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2127:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2127:6:7"
                                },
                                "nativeSrc": "2127:51:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2127:51:7"
                              },
                              "nativeSrc": "2127:51:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2127:51:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nativeSrc": "1583:601:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1747:9:7",
                            "nodeType": "YulTypedName",
                            "src": "1747:9:7",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nativeSrc": "1758:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1758:6:7",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nativeSrc": "1766:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1766:6:7",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nativeSrc": "1774:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1774:6:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1782:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1782:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1790:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1790:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1798:6:7",
                            "nodeType": "YulTypedName",
                            "src": "1798:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1809:4:7",
                            "nodeType": "YulTypedName",
                            "src": "1809:4:7",
                            "type": ""
                          }
                        ],
                        "src": "1583:601:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2259:177:7",
                          "nodeType": "YulBlock",
                          "src": "2259:177:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2305:16:7",
                                "nodeType": "YulBlock",
                                "src": "2305:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2314:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2314:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2317:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2317:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2307:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2307:6:7"
                                      },
                                      "nativeSrc": "2307:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2307:12:7"
                                    },
                                    "nativeSrc": "2307:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2307:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2280:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2280:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2289:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2289:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2276:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2276:3:7"
                                    },
                                    "nativeSrc": "2276:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2276:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2301:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2301:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2272:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2272:3:7"
                                },
                                "nativeSrc": "2272:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2272:32:7"
                              },
                              "nativeSrc": "2269:52:7",
                              "nodeType": "YulIf",
                              "src": "2269:52:7"
                            },
                            {
                              "nativeSrc": "2330:36:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2330:36:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2356:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2356:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2343:12:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2343:12:7"
                                },
                                "nativeSrc": "2343:23:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2343:23:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2334:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2334:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2400:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2400:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "2375:24:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2375:24:7"
                                },
                                "nativeSrc": "2375:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2375:31:7"
                              },
                              "nativeSrc": "2375:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2375:31:7"
                            },
                            {
                              "nativeSrc": "2415:15:7",
                              "nodeType": "YulAssignment",
                              "src": "2415:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2425:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "2425:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2415:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2415:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "2189:247:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2225:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2225:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2236:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2236:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2248:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2248:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2189:247:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2522:170:7",
                          "nodeType": "YulBlock",
                          "src": "2522:170:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2568:16:7",
                                "nodeType": "YulBlock",
                                "src": "2568:16:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2577:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2577:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2580:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "2580:1:7",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2570:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2570:6:7"
                                      },
                                      "nativeSrc": "2570:12:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2570:12:7"
                                    },
                                    "nativeSrc": "2570:12:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2570:12:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2543:7:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2543:7:7"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2552:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2552:9:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2539:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2539:3:7"
                                    },
                                    "nativeSrc": "2539:23:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2539:23:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2564:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2564:2:7",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2535:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2535:3:7"
                                },
                                "nativeSrc": "2535:32:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2535:32:7"
                              },
                              "nativeSrc": "2532:52:7",
                              "nodeType": "YulIf",
                              "src": "2532:52:7"
                            },
                            {
                              "nativeSrc": "2593:29:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2593:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2612:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2612:9:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "2606:5:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2606:5:7"
                                },
                                "nativeSrc": "2606:16:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2606:16:7"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2597:5:7",
                                  "nodeType": "YulTypedName",
                                  "src": "2597:5:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "2656:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2656:5:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nativeSrc": "2631:24:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2631:24:7"
                                },
                                "nativeSrc": "2631:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2631:31:7"
                              },
                              "nativeSrc": "2631:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2631:31:7"
                            },
                            {
                              "nativeSrc": "2671:15:7",
                              "nodeType": "YulAssignment",
                              "src": "2671:15:7",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2681:5:7",
                                "nodeType": "YulIdentifier",
                                "src": "2681:5:7"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2671:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2671:6:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nativeSrc": "2441:251:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2488:9:7",
                            "nodeType": "YulTypedName",
                            "src": "2488:9:7",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2499:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2499:7:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2511:6:7",
                            "nodeType": "YulTypedName",
                            "src": "2511:6:7",
                            "type": ""
                          }
                        ],
                        "src": "2441:251:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2729:95:7",
                          "nodeType": "YulBlock",
                          "src": "2729:95:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2746:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2746:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2753:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2753:3:7",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2758:10:7",
                                        "nodeType": "YulLiteral",
                                        "src": "2758:10:7",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "2749:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2749:3:7"
                                    },
                                    "nativeSrc": "2749:20:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2749:20:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2739:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2739:6:7"
                                },
                                "nativeSrc": "2739:31:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2739:31:7"
                              },
                              "nativeSrc": "2739:31:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2739:31:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2786:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2786:1:7",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2789:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2789:4:7",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2779:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2779:6:7"
                                },
                                "nativeSrc": "2779:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2779:15:7"
                              },
                              "nativeSrc": "2779:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2779:15:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2810:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2810:1:7",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2813:4:7",
                                    "nodeType": "YulLiteral",
                                    "src": "2813:4:7",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "2803:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2803:6:7"
                                },
                                "nativeSrc": "2803:15:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2803:15:7"
                              },
                              "nativeSrc": "2803:15:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "2803:15:7"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "2697:127:7",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2697:127:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "2881:116:7",
                          "nodeType": "YulBlock",
                          "src": "2881:116:7",
                          "statements": [
                            {
                              "nativeSrc": "2891:20:7",
                              "nodeType": "YulAssignment",
                              "src": "2891:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "2906:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2906:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "2909:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "2909:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "2902:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2902:3:7"
                                },
                                "nativeSrc": "2902:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2902:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "2891:7:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2891:7:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "2969:22:7",
                                "nodeType": "YulBlock",
                                "src": "2969:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "2971:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "2971:16:7"
                                      },
                                      "nativeSrc": "2971:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2971:18:7"
                                    },
                                    "nativeSrc": "2971:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2971:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "2940:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2940:1:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "2933:6:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2933:6:7"
                                        },
                                        "nativeSrc": "2933:9:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2933:9:7"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "2947:1:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "2947:1:7"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "2954:7:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "2954:7:7"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "2963:1:7",
                                                "nodeType": "YulIdentifier",
                                                "src": "2963:1:7"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "2950:3:7",
                                              "nodeType": "YulIdentifier",
                                              "src": "2950:3:7"
                                            },
                                            "nativeSrc": "2950:15:7",
                                            "nodeType": "YulFunctionCall",
                                            "src": "2950:15:7"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "2944:2:7",
                                          "nodeType": "YulIdentifier",
                                          "src": "2944:2:7"
                                        },
                                        "nativeSrc": "2944:22:7",
                                        "nodeType": "YulFunctionCall",
                                        "src": "2944:22:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "2930:2:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2930:2:7"
                                    },
                                    "nativeSrc": "2930:37:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2930:37:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "2923:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "2923:6:7"
                                },
                                "nativeSrc": "2923:45:7",
                                "nodeType": "YulFunctionCall",
                                "src": "2923:45:7"
                              },
                              "nativeSrc": "2920:71:7",
                              "nodeType": "YulIf",
                              "src": "2920:71:7"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "2829:168:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "2860:1:7",
                            "nodeType": "YulTypedName",
                            "src": "2860:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "2863:1:7",
                            "nodeType": "YulTypedName",
                            "src": "2863:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "2869:7:7",
                            "nodeType": "YulTypedName",
                            "src": "2869:7:7",
                            "type": ""
                          }
                        ],
                        "src": "2829:168:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3048:171:7",
                          "nodeType": "YulBlock",
                          "src": "3048:171:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3079:111:7",
                                "nodeType": "YulBlock",
                                "src": "3079:111:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3100:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3100:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3107:3:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3107:3:7",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3112:10:7",
                                              "nodeType": "YulLiteral",
                                              "src": "3112:10:7",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3103:3:7",
                                            "nodeType": "YulIdentifier",
                                            "src": "3103:3:7"
                                          },
                                          "nativeSrc": "3103:20:7",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3103:20:7"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3093:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3093:6:7"
                                      },
                                      "nativeSrc": "3093:31:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3093:31:7"
                                    },
                                    "nativeSrc": "3093:31:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3093:31:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3144:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3144:1:7",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3147:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3147:4:7",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "3137:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3137:6:7"
                                      },
                                      "nativeSrc": "3137:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3137:15:7"
                                    },
                                    "nativeSrc": "3137:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3137:15:7"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3172:1:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3172:1:7",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3175:4:7",
                                          "nodeType": "YulLiteral",
                                          "src": "3175:4:7",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3165:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3165:6:7"
                                      },
                                      "nativeSrc": "3165:15:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3165:15:7"
                                    },
                                    "nativeSrc": "3165:15:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3165:15:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "3068:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3068:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3061:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3061:6:7"
                                },
                                "nativeSrc": "3061:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3061:9:7"
                              },
                              "nativeSrc": "3058:132:7",
                              "nodeType": "YulIf",
                              "src": "3058:132:7"
                            },
                            {
                              "nativeSrc": "3199:14:7",
                              "nodeType": "YulAssignment",
                              "src": "3199:14:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3208:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3208:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "3211:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3211:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "3204:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3204:3:7"
                                },
                                "nativeSrc": "3204:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3204:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "3199:1:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3199:1:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "3002:217:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "3033:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3033:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "3036:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3036:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "3042:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3042:1:7",
                            "type": ""
                          }
                        ],
                        "src": "3002:217:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3271:88:7",
                          "nodeType": "YulBlock",
                          "src": "3271:88:7",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3302:22:7",
                                "nodeType": "YulBlock",
                                "src": "3302:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "3304:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3304:16:7"
                                      },
                                      "nativeSrc": "3304:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3304:18:7"
                                    },
                                    "nativeSrc": "3304:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3304:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3287:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3287:5:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3298:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3298:1:7",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "3294:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3294:3:7"
                                    },
                                    "nativeSrc": "3294:6:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3294:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "3284:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3284:2:7"
                                },
                                "nativeSrc": "3284:17:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3284:17:7"
                              },
                              "nativeSrc": "3281:43:7",
                              "nodeType": "YulIf",
                              "src": "3281:43:7"
                            },
                            {
                              "nativeSrc": "3333:20:7",
                              "nodeType": "YulAssignment",
                              "src": "3333:20:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3344:5:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3344:5:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3351:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3351:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3340:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3340:3:7"
                                },
                                "nativeSrc": "3340:13:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3340:13:7"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nativeSrc": "3333:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3333:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nativeSrc": "3224:135:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nativeSrc": "3253:5:7",
                            "nodeType": "YulTypedName",
                            "src": "3253:5:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nativeSrc": "3263:3:7",
                            "nodeType": "YulTypedName",
                            "src": "3263:3:7",
                            "type": ""
                          }
                        ],
                        "src": "3224:135:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3521:218:7",
                          "nodeType": "YulBlock",
                          "src": "3521:218:7",
                          "statements": [
                            {
                              "nativeSrc": "3531:26:7",
                              "nodeType": "YulAssignment",
                              "src": "3531:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3543:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3543:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3554:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3554:2:7",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3539:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3539:3:7"
                                },
                                "nativeSrc": "3539:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3539:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3531:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3531:4:7"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3566:29:7",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3566:29:7",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3584:3:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3584:3:7",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3589:1:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3589:1:7",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3580:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3580:3:7"
                                    },
                                    "nativeSrc": "3580:11:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3580:11:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3593:1:7",
                                    "nodeType": "YulLiteral",
                                    "src": "3593:1:7",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "3576:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3576:3:7"
                                },
                                "nativeSrc": "3576:19:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3576:19:7"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "3570:2:7",
                                  "nodeType": "YulTypedName",
                                  "src": "3570:2:7",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3611:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3611:9:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3626:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3626:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "3634:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3634:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3622:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3622:3:7"
                                    },
                                    "nativeSrc": "3622:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3622:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3604:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3604:6:7"
                                },
                                "nativeSrc": "3604:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3604:34:7"
                              },
                              "nativeSrc": "3604:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3604:34:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3658:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3658:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3669:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3669:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3654:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3654:3:7"
                                    },
                                    "nativeSrc": "3654:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3654:18:7"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nativeSrc": "3678:6:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3678:6:7"
                                      },
                                      {
                                        "name": "_1",
                                        "nativeSrc": "3686:2:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3686:2:7"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3674:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3674:3:7"
                                    },
                                    "nativeSrc": "3674:15:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3674:15:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3647:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3647:6:7"
                                },
                                "nativeSrc": "3647:43:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3647:43:7"
                              },
                              "nativeSrc": "3647:43:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3647:43:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3710:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3710:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3721:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "3721:2:7",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3706:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "3706:3:7"
                                    },
                                    "nativeSrc": "3706:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3706:18:7"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "3726:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3726:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3699:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3699:6:7"
                                },
                                "nativeSrc": "3699:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3699:34:7"
                              },
                              "nativeSrc": "3699:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "3699:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nativeSrc": "3364:375:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3474:9:7",
                            "nodeType": "YulTypedName",
                            "src": "3474:9:7",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "3485:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3485:6:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3493:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3493:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3501:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3501:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3512:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3512:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3364:375:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "3793:79:7",
                          "nodeType": "YulBlock",
                          "src": "3793:79:7",
                          "statements": [
                            {
                              "nativeSrc": "3803:17:7",
                              "nodeType": "YulAssignment",
                              "src": "3803:17:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "3815:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3815:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "3818:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3818:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "3811:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3811:3:7"
                                },
                                "nativeSrc": "3811:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3811:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "3803:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3803:4:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3844:22:7",
                                "nodeType": "YulBlock",
                                "src": "3844:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "3846:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "3846:16:7"
                                      },
                                      "nativeSrc": "3846:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3846:18:7"
                                    },
                                    "nativeSrc": "3846:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3846:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "3835:4:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3835:4:7"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "3841:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "3841:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3832:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3832:2:7"
                                },
                                "nativeSrc": "3832:11:7",
                                "nodeType": "YulFunctionCall",
                                "src": "3832:11:7"
                              },
                              "nativeSrc": "3829:37:7",
                              "nodeType": "YulIf",
                              "src": "3829:37:7"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "3744:128:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "3775:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3775:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "3778:1:7",
                            "nodeType": "YulTypedName",
                            "src": "3778:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "3784:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3784:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3744:128:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4006:119:7",
                          "nodeType": "YulBlock",
                          "src": "4006:119:7",
                          "statements": [
                            {
                              "nativeSrc": "4016:26:7",
                              "nodeType": "YulAssignment",
                              "src": "4016:26:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4028:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4028:9:7"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4039:2:7",
                                    "nodeType": "YulLiteral",
                                    "src": "4039:2:7",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4024:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4024:3:7"
                                },
                                "nativeSrc": "4024:18:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4024:18:7"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4016:4:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4016:4:7"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4058:9:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4058:9:7"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "4069:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4069:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4051:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4051:6:7"
                                },
                                "nativeSrc": "4051:25:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4051:25:7"
                              },
                              "nativeSrc": "4051:25:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "4051:25:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4096:9:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4096:9:7"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4107:2:7",
                                        "nodeType": "YulLiteral",
                                        "src": "4107:2:7",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4092:3:7",
                                      "nodeType": "YulIdentifier",
                                      "src": "4092:3:7"
                                    },
                                    "nativeSrc": "4092:18:7",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4092:18:7"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "4112:6:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4112:6:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4085:6:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4085:6:7"
                                },
                                "nativeSrc": "4085:34:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4085:34:7"
                              },
                              "nativeSrc": "4085:34:7",
                              "nodeType": "YulExpressionStatement",
                              "src": "4085:34:7"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "3877:248:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3967:9:7",
                            "nodeType": "YulTypedName",
                            "src": "3967:9:7",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3978:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3978:6:7",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3986:6:7",
                            "nodeType": "YulTypedName",
                            "src": "3986:6:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3997:4:7",
                            "nodeType": "YulTypedName",
                            "src": "3997:4:7",
                            "type": ""
                          }
                        ],
                        "src": "3877:248:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4178:77:7",
                          "nodeType": "YulBlock",
                          "src": "4178:77:7",
                          "statements": [
                            {
                              "nativeSrc": "4188:16:7",
                              "nodeType": "YulAssignment",
                              "src": "4188:16:7",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4199:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4199:1:7"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4202:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4202:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4195:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4195:3:7"
                                },
                                "nativeSrc": "4195:9:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4195:9:7"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "4188:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4188:3:7"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4227:22:7",
                                "nodeType": "YulBlock",
                                "src": "4227:22:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4229:16:7",
                                        "nodeType": "YulIdentifier",
                                        "src": "4229:16:7"
                                      },
                                      "nativeSrc": "4229:18:7",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4229:18:7"
                                    },
                                    "nativeSrc": "4229:18:7",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4229:18:7"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4219:1:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4219:1:7"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "4222:3:7",
                                    "nodeType": "YulIdentifier",
                                    "src": "4222:3:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4216:2:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4216:2:7"
                                },
                                "nativeSrc": "4216:10:7",
                                "nodeType": "YulFunctionCall",
                                "src": "4216:10:7"
                              },
                              "nativeSrc": "4213:36:7",
                              "nodeType": "YulIf",
                              "src": "4213:36:7"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "4130:125:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4161:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4161:1:7",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4164:1:7",
                            "nodeType": "YulTypedName",
                            "src": "4164:1:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "4170:3:7",
                            "nodeType": "YulTypedName",
                            "src": "4170:3:7",
                            "type": ""
                          }
                        ],
                        "src": "4130:125:7"
                      },
                      {
                        "body": {
                          "nativeSrc": "4451:14:7",
                          "nodeType": "YulBlock",
                          "src": "4451:14:7",
                          "statements": [
                            {
                              "nativeSrc": "4453:10:7",
                              "nodeType": "YulAssignment",
                              "src": "4453:10:7",
                              "value": {
                                "name": "pos",
                                "nativeSrc": "4460:3:7",
                                "nodeType": "YulIdentifier",
                                "src": "4460:3:7"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nativeSrc": "4453:3:7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4453:3:7"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nativeSrc": "4260:205:7",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nativeSrc": "4435:3:7",
                            "nodeType": "YulTypedName",
                            "src": "4435:3:7",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nativeSrc": "4443:3:7",
                            "nodeType": "YulTypedName",
                            "src": "4443:3:7",
                            "type": ""
                          }
                        ],
                        "src": "4260:205:7"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n}",
                  "id": 7,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106101185760003560e01c8063ab7b1c89116100a0578063e2c41dbc11610064578063e2c41dbc1461035d578063f2fde38b14610365578063f5521bf114610385578063fb107a4f1461039b578063fe5c873a146103af57600080fd5b8063ab7b1c8914610264578063af310cc114610277578063b11972391461028d578063cc952b57146102ad578063e1ec3c68146102c357600080fd5b80635c975abb116100e75780635c975abb146101af5780636ef2dd35146101d3578063715018a6146102035780637c3a00fd146102185780638da5cb5b1461022e57600080fd5b806302329a2914610124578063155dd5ee146101465780632f7ab57214610166578063488dd3e61461018f57600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b5061014461013f366004610d90565b6103cf565b005b34801561015257600080fd5b50610144610161366004610db9565b6103f0565b34801561017257600080fd5b5061017c60035481565b6040519081526020015b60405180910390f35b34801561019b57600080fd5b506101446101aa366004610de7565b610434565b3480156101bb57600080fd5b5060015460ff165b6040519015158152602001610186565b3480156101df57600080fd5b506101c36101ee366004610db9565b60086020526000908152604090205460ff1681565b34801561020f57600080fd5b506101446107c4565b34801561022457600080fd5b5061017c60025481565b34801561023a57600080fd5b5060015461010090046001600160a01b03166040516001600160a01b039091168152602001610186565b610144610272366004610db9565b6107d8565b34801561028357600080fd5b5061017c60065481565b34801561029957600080fd5b5061017c6102a8366004610db9565b610991565b3480156102b957600080fd5b5061017c60055481565b3480156102cf57600080fd5b506103236102de366004610db9565b6007602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b039485169593909416939192909160ff1686565b604080516001600160a01b0397881681529690951660208701529385019290925260608401526080830152151560a082015260c001610186565b6101446109be565b34801561037157600080fd5b50610144610380366004610e1c565b6109c6565b34801561039157600080fd5b5061017c60045481565b3480156103a757600080fd5b50606461017c565b3480156103bb57600080fd5b506101446103ca366004610db9565b610a06565b6103d7610b91565b80156103e8576103e5610bc4565b50565b6103e5610c18565b6103f8610b91565b478111156104195760405163786e0a9960e01b815260040160405180910390fd5b6001546103e59061010090046001600160a01b031682610c51565b61043c610cc5565b610444610cef565b6040516331a9108f60e11b81526004810183905233906001600160a01b03851690636352211e90602401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190610e39565b6001600160a01b0316146104d6576040516330cd747160e01b815260040160405180910390fd5b804710156104f75760405163786e0a9960e01b815260040160405180910390fd5b60405163020604bf60e21b81526004810183905230906001600160a01b0385169063081812fc90602401602060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105629190610e39565b6001600160a01b031614610589576040516325cdf54f60e21b815260040160405180910390fd5b60065433600090815260096020526040902054106105ba576040516379f076cb60e01b815260040160405180910390fd5b6127106003546105c8606490565b6105d29190610e6c565b6105dc9190610e83565b8111156105fc57604051635bf1f5fd60e01b815260040160405180910390fd5b6040805160c081018252338082526001600160a01b03861660208084019190915282840186905260608301859052426080840152600160a08401526000918252600990529182208054919261065083610ea5565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd90606401600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b5050600580546000908152600760209081526040808320875181546001600160a01b039182166001600160a01b0319918216178355848a015160018085018054929094169190921617909155828901516002830155606089015160038301556080890151600483015560a0890151918601805492151560ff199384161790558a85526008909352908320805490911690911790558154935090915061075b83610ea5565b919050555061076a3383610c51565b60016005546107799190610ebe565b604080518581526020810185905233917f1804eb76dc9809be7ef188388aa1aeb765881fd848377be891234e5c584345fe910160405180910390a3506107bf6001600055565b505050565b6107cc610b91565b6107d66000610d13565b565b6107e0610cc5565b6107e8610cef565b6000818152600760205260409020600581015460ff1661081b5760405163049cd05960e21b815260040160405180910390fd5b80546001600160a01b031633146108455760405163014776c360e71b815260040160405180910390fd5b60045481600401546108579190610ed1565b42111561087757604051632ee48ce560e11b815260040160405180910390fd5b60006108868260030154610991565b9050803410156108a957604051632ca2f52b60e11b815260040160405180910390fd5b600182015460028301546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561090357600080fd5b505af1158015610917573d6000803e3d6000fd5b50505060058301805460ff1990811690915560028401805460009081526008602052604090819020805490931690925554905185925033917fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f4928235213826989161097d91815260200190565b60405180910390a350506103e56001600055565b6000612710600254836109a49190610e6c565b6109ae9190610e83565b6109b89083610ed1565b92915050565b6107d6610b91565b6109ce610b91565b6001600160a01b0381166109fd57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103e581610d13565b610a0e610b91565b6000818152600760205260409020600581015460ff16610a415760405163049cd05960e21b815260040160405180910390fd5b6004548160040154610a539190610ed1565b421015610a735760405163261094a960e21b815260040160405180910390fd5b60018101546001600160a01b03166342842e0e30610a9f6001546001600160a01b036101009091041690565b60028501546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610af357600080fd5b505af1158015610b07573d6000803e3d6000fd5b5050505060058101805460ff199081169091556002820154600090815260086020526040902080549091169055600154829061010090046001600160a01b03166001600160a01b03167fd93bbb9e10b7af5aa4b410ac845ae87a717d305e8a4777959ad1dd06e6a1ac988360020154604051610b8591815260200190565b60405180910390a35050565b6001546001600160a01b036101009091041633146107d65760405163118cdaa760e01b81523360048201526024016109f4565b610bcc610cef565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258335b6040516001600160a01b03909116815260200160405180910390a1565b610c20610d6d565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610bfb565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c9e576040519150601f19603f3d011682016040523d82523d6000602084013e610ca3565b606091505b50509050806107bf576040516312171d8360e31b815260040160405180910390fd5b600260005403610ce857604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b60015460ff16156107d65760405163d93c066560e01b815260040160405180910390fd5b600180546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015460ff166107d657604051638dfc202b60e01b815260040160405180910390fd5b600060208284031215610da257600080fd5b81358015158114610db257600080fd5b9392505050565b600060208284031215610dcb57600080fd5b5035919050565b6001600160a01b03811681146103e557600080fd5b600080600060608486031215610dfc57600080fd5b8335610e0781610dd2565b95602085013595506040909401359392505050565b600060208284031215610e2e57600080fd5b8135610db281610dd2565b600060208284031215610e4b57600080fd5b8151610db281610dd2565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176109b8576109b8610e56565b600082610ea057634e487b7160e01b600052601260045260246000fd5b500490565b600060018201610eb757610eb7610e56565b5060010190565b818103818111156109b8576109b8610e56565b808201808211156109b8576109b8610e5656fea26469706673582212205ed1e116c4243391e579a2882f34d72863617177b191d711deaf11d6646bd7be64736f6c63430008180033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB7B1C89 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xE2C41DBC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE2C41DBC EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0xF5521BF1 EQ PUSH2 0x385 JUMPI DUP1 PUSH4 0xFB107A4F EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0xFE5C873A EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB7B1C89 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xAF310CC1 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xB1197239 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0xCC952B57 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xE1EC3C68 EQ PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x6EF2DD35 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x7C3A00FD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2329A29 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x155DD5EE EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x2F7AB572 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x488DD3E6 EQ PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x11F JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x3F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x7C4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x299 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP6 SWAP4 SWAP1 SWAP5 AND SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP7 SWAP1 SWAP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x9BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x380 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1C JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17C PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x64 PUSH2 0x17C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0xDB9 JUMP JUMPDEST PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0xB91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH2 0x3E5 PUSH2 0xBC4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E5 PUSH2 0xC18 JUMP JUMPDEST PUSH2 0x3F8 PUSH2 0xB91 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3E5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0xC51 JUMP JUMPDEST PUSH2 0x43C PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x444 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x30CD7471 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x786E0A99 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x81812FC SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x562 SWAP2 SWAP1 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH4 0x25CDF54F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH4 0x79F076CB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x3 SLOAD PUSH2 0x5C8 PUSH1 0x64 SWAP1 JUMP JUMPDEST PUSH2 0x5D2 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x5DC SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x5FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x5BF1F5FD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 DUP5 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP4 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x9 SWAP1 MSTORE SWAP2 DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 PUSH2 0x650 DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP4 SSTORE DUP5 DUP11 ADD MLOAD PUSH1 0x1 DUP1 DUP6 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP5 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP2 SSTORE DUP3 DUP10 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP10 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP10 ADD MLOAD SWAP2 DUP7 ADD DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP4 DUP5 AND OR SWAP1 SSTORE DUP11 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE DUP2 SLOAD SWAP4 POP SWAP1 SWAP2 POP PUSH2 0x75B DUP4 PUSH2 0xEA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x76A CALLER DUP4 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x779 SWAP2 SWAP1 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1804EB76DC9809BE7EF188388AA1AEB765881FD848377BE891234E5C584345FE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x7BF PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x7CC PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x7D6 PUSH1 0x0 PUSH2 0xD13 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7E0 PUSH2 0xCC5 JUMP JUMPDEST PUSH2 0x7E8 PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x81B JUMPI PUSH1 0x40 MLOAD PUSH4 0x49CD059 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH4 0x14776C3 PUSH1 0xE7 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0x857 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x877 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2EE48CE5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x886 DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x991 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x903 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP5 ADD DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP4 AND SWAP1 SWAP3 SSTORE SLOAD SWAP1 MLOAD DUP6 SWAP3 POP CALLER SWAP2 PUSH32 0xC7CE0A35F17B490DE2A317E7FECB2CAE86B1ABFFB03800B2F492823521382698 SWAP2 PUSH2 0x97D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x3E5 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x2 SLOAD DUP4 PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0x9AE SWAP2 SWAP1 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x9B8 SWAP1 DUP4 PUSH2 0xED1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7D6 PUSH2 0xB91 JUMP JUMPDEST PUSH2 0x9CE PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E5 DUP2 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0xA0E PUSH2 0xB91 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49CD059 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD DUP2 PUSH1 0x4 ADD SLOAD PUSH2 0xA53 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x261094A9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E ADDRESS PUSH2 0xA9F PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x1 SLOAD DUP3 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD93BBB9E10B7AF5AA4B410AC845AE87A717D305E8A4777959AD1DD06E6A1AC98 DUP4 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xB85 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0xBCC PUSH2 0xCEF JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xCE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x7D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xE07 DUP2 PUSH2 0xDD2 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDB2 DUP2 PUSH2 0xDD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xDB2 DUP2 PUSH2 0xDD2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEA0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xEB7 JUMPI PUSH2 0xEB7 PUSH2 0xE56 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x9B8 JUMPI PUSH2 0x9B8 PUSH2 0xE56 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xD1 0xE1 AND 0xC4 0x24 CALLER SWAP2 0xE5 PUSH26 0xA2882F34D72863617177B191D711DEAF11D6646BD7BE64736F6C PUSH4 0x43000818 STOP CALLER ",
              "sourceMap": "828:8218:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8899:145;;;;;;;;;;-1:-1:-1;8899:145:6;;;;;:::i;:::-;;:::i;:::-;;7666:196;;;;;;;;;;-1:-1:-1;7666:196:6;;;;;:::i;:::-;;:::i;982:43::-;;;;;;;;;;;;;;;;;;;623:25:7;;;611:2;596:18;982:43:6;;;;;;;;3771:1508;;;;;;;;;;-1:-1:-1;3771:1508:6;;;;;:::i;:::-;;:::i;1850:84:3:-;;;;;;;;;;-1:-1:-1;1920:7:3;;;;1850:84;;;1348:14:7;;1341:22;1323:41;;1311:2;1296:18;1850:84:3;1183:187:7;1795:50:6;;;;;;;;;;-1:-1:-1;1795:50:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;897:27:6:-;;;;;;;;;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1710:6:0;;;;;-1:-1:-1;;;;;1710:6:0;1638:85;;-1:-1:-1;;;;;1539:32:7;;;1521:51;;1509:2;1494:18;1638:85:0;1375:203:7;5441:786:6;;;;;;:::i;:::-;;:::i;1216:47::-;;;;;;;;;;;;;;;;7140:161;;;;;;;;;;-1:-1:-1;7140:161:6;;;;;:::i;:::-;;:::i;1152:25::-;;;;;;;;;;;;;;;;1720:37;;;;;;;;;;-1:-1:-1;1720:37:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1720:37:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1920:15:7;;;1902:34;;1972:15;;;;1967:2;1952:18;;1945:43;2004:18;;;1997:34;;;;2062:2;2047:18;;2040:34;2105:3;2090:19;;2083:35;2162:14;2155:22;1882:3;2134:19;;2127:51;1851:3;1836:19;1720:37:6;1583:601:7;7408:58:6;;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1067:27:6:-;;;;;;;;;;;;;;;;8602:80;;;;;;;;;;-1:-1:-1;8672:3:6;8602:80;;6400:544;;;;;;;;;;-1:-1:-1;6400:544:6;;;;;:::i;:::-;;:::i;8899:145::-;1531:13:0;:11;:13::i;:::-;8958:5:6::1;8955:63;;;8979:8;:6;:8::i;:::-;8899:145:::0;:::o;8955:63::-:1;9027:10;:8;:10::i;7666:196::-:0;1531:13:0;:11;:13::i;:::-;7748:21:6::1;7738:7;:31;7735:72;;;7778:29;;-1:-1:-1::0;;;7778:29:6::1;;;;;;;;;;;7735:72;1710:6:0::0;;7817:38:6::1;::::0;1710:6:0;;;-1:-1:-1;;;;;1710:6:0;7847:7:6::1;7817:11;:38::i;3771:1508::-:0;2356:21:4;:19;:21::i;:::-;1474:19:3::1;:17;:19::i;:::-;3897:36:6::2;::::0;-1:-1:-1;;;3897:36:6;;::::2;::::0;::::2;623:25:7::0;;;3937:10:6::2;::::0;-1:-1:-1;;;;;3897:28:6;::::2;::::0;::::2;::::0;596:18:7;;3897:36:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3897:50:6::2;;3894:72;;3956:10;;-1:-1:-1::0;;;3956:10:6::2;;;;;;;;;;;3894:72;4077:11;4053:21;:35;4050:76;;;4097:29;;-1:-1:-1::0;;;4097:29:6::2;;;;;;;;;;;4050:76;4139:40;::::0;-1:-1:-1;;;4139:40:6;;::::2;::::0;::::2;623:25:7::0;;;4191:4:6::2;::::0;-1:-1:-1;;;;;4139:32:6;::::2;::::0;::::2;::::0;596:18:7;;4139:40:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;4139:57:6::2;;4136:91;;4205:22;;-1:-1:-1::0;;;4205:22:6::2;;;;;;;;;;;4136:91;4274:28;::::0;4259:10:::2;4240:30;::::0;;;:18:::2;:30;::::0;;;;;:62:::2;4237:88;;4311:14;;-1:-1:-1::0;;;4311:14:6::2;;;;;;;;;;;4237:88;4392:5;4368:21;;4352:13;8672:3:::0;;8602:80;4352:13:::2;:37;;;;:::i;:::-;:45;;;;:::i;:::-;4338:11;:59;4335:90;;;4406:19;;-1:-1:-1::0;;;4406:19:6::2;;;;;;;;;;;4335:90;4485:219;::::0;;::::2;::::0;::::2;::::0;;4514:10:::2;4485:219:::0;;;-1:-1:-1;;;;;4485:219:6;::::2;;::::0;;::::2;::::0;;;;;;;;;;;;;;;;4650:15:::2;4485:219:::0;;;;4689:4:::2;4485:219:::0;;;;4463:19:::2;4714:30:::0;;;:18:::2;:30:::0;;;;;:32;;4485:219;;4714:32:::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;;4924:68:6::2;::::0;-1:-1:-1;;;4924:68:6;;4958:10:::2;4924:68;::::0;::::2;3604:34:7::0;4978:4:6::2;3654:18:7::0;;;3647:43;3706:18;;;3699:34;;;-1:-1:-1;;;;;4924:33:6;::::2;::::0;::::2;::::0;3539:18:7;;4924:68:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;5008:10:6::2;::::0;;5002:17:::2;::::0;;;:5:::2;:17;::::0;;;;;;;:27;;;;-1:-1:-1;;;;;5002:27:6;;::::2;-1:-1:-1::0;;;;;;5002:27:6;;::::2;;::::0;;;;::::2;::::0;;;;::::2;::::0;;;;;::::2;::::0;;;::::2;;::::0;;;;;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;::::2;::::0;;;::::2;::::0;;;::::2;;-1:-1:-1::0;;5002:27:6;;::::2;;::::0;;5039:26;;;:18:::2;:26:::0;;;;;;:33;;;;::::2;::::0;;::::2;::::0;;5082:12;;;-1:-1:-1;5008:10:6;;-1:-1:-1;5082:12:6::2;::::0;::::2;:::i;:::-;;;;;;5152:45;5172:10;5185:11;5152;:45::i;:::-;5249:1;5236:10;;:14;;;;:::i;:::-;5212:60;::::0;;4051:25:7;;;4107:2;4092:18;;4085:34;;;5224:10:6::2;::::0;5212:60:::2;::::0;4024:18:7;5212:60:6::2;;;;;;;3884:1395;2398:20:4::0;1713:1;2924:7;:21;2744:208;2398:20;3771:1508:6;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5441:786:6:-;2356:21:4;:19;:21::i;:::-;1474:19:3::1;:17;:19::i;:::-;5531:17:6::2;5551:14:::0;;;:5:::2;:14;::::0;;;;5579:13:::2;::::0;::::2;::::0;::::2;;5575:40;;5601:14;;-1:-1:-1::0;;;5601:14:6::2;;;;;;;;;;;5575:40;5628:13:::0;;-1:-1:-1;;;;;5628:13:6::2;5645:10;5628:27;5625:61;;5664:22;;-1:-1:-1::0;;;5664:22:6::2;;;;;;;;;;;5625:61;5734:12;;5717:4;:14;;;:29;;;;:::i;:::-;5699:15;:47;5696:72;;;5755:13;;-1:-1:-1::0;;;5755:13:6::2;;;;;;;;;;;5696:72;5778:22;5803:41;5828:4;:15;;;5803:24;:41::i;:::-;5778:66;;5869:14;5857:9;:26;5854:58;;;5892:20;;-1:-1:-1::0;;;5892:20:6::2;;;;;;;;;;;5854:58;5977:15;::::0;::::2;::::0;6034:10:::2;::::0;::::2;::::0;5969:76:::2;::::0;-1:-1:-1;;;5969:76:6;;6015:4:::2;5969:76;::::0;::::2;3604:34:7::0;6022:10:6::2;3654:18:7::0;;;3647:43;3706:18;;;3699:34;;;;-1:-1:-1;;;;;5977:15:6;;::::2;::::0;5969:37:::2;::::0;3539:18:7;;5969:76:6::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;;6092:13:6::2;::::0;::::2;:21:::0;;-1:-1:-1;;6092:21:6;;::::2;::::0;;;6142:10:::2;::::0;::::2;::::0;;6108:5:::2;6123:30:::0;;;:18:::2;:30;::::0;;;;;;:38;;;;::::2;::::0;;;6209:10;6177:43;;6200:7;;-1:-1:-1;6188:10:6::2;::::0;6177:43:::2;::::0;::::2;::::0;623:25:7;;611:2;596:18;;477:177;6177:43:6::2;;;;;;;;5521:706;;2398:20:4::0;1713:1;2924:7;:21;2744:208;7140:161:6;7216:7;7288:5;7272:12;;7258:11;:26;;;;:::i;:::-;7257:36;;;;:::i;:::-;7242:52;;:11;:52;:::i;:::-;7235:59;7140:161;-1:-1:-1;;7140:161:6:o;7408:58::-;1531:13:0;:11;:13::i;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1521:51:7::0;1494:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;6400:544:6:-:0;1531:13:0;:11;:13::i;:::-;6464:17:6::1;6484:14:::0;;;:5:::1;:14;::::0;;;;6512:13:::1;::::0;::::1;::::0;::::1;;6508:40;;6534:14;;-1:-1:-1::0;;;6534:14:6::1;;;;;;;;;;;6508:40;6596:12;;6579:4;:14;;;:29;;;;:::i;:::-;6561:15;:47;6558:75;;;6617:16;;-1:-1:-1::0;;;6617:16:6::1;;;;;;;;;;;6558:75;6697:15;::::0;::::1;::::0;-1:-1:-1;;;;;6697:15:6::1;6689:41;6739:4;6746:7;1710:6:0::0;;-1:-1:-1;;;;;1710:6:0;;;;;;1638:85;6746:7:6::1;6755:10;::::0;::::1;::::0;6689:77:::1;::::0;-1:-1:-1;;;;;;6689:77:6::1;::::0;;;;;;-1:-1:-1;;;;;3622:15:7;;;6689:77:6::1;::::0;::::1;3604:34:7::0;3674:15;;;;3654:18;;;3647:43;3706:18;;;3699:34;3539:18;;6689:77:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;6813:13:6::1;::::0;::::1;:21:::0;;-1:-1:-1;;6813:21:6;;::::1;::::0;;;6863:10:::1;::::0;::::1;::::0;-1:-1:-1;6844:30:6;;;:18:::1;:30;::::0;;;;:38;;;;::::1;::::0;;-1:-1:-1;1710:6:0;6917:7:6;;1710:6:0;;;-1:-1:-1;;;;;1710:6:0;-1:-1:-1;;;;;6897:40:6::1;;6926:4;:10;;;6897:40;;;;623:25:7::0;;611:2;596:18;;477:177;6897:40:6::1;;;;;;;;6454:490;6400:544:::0;:::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;;;;;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;1521:51:7;1494:18;;1901:40:0;1375:203:7;2463:115:3;1474:19;:17;:19::i;:::-;2532:4:::1;2522:14:::0;;-1:-1:-1;;2522:14:3::1;::::0;::::1;::::0;;2551:20:::1;735:10:2::0;2558:12:3::1;2551:20;::::0;-1:-1:-1;;;;;1539:32:7;;;1521:51;;1509:2;1494:18;2551:20:3::1;;;;;;;2463:115::o:0;2710:117::-;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:3::1;::::0;;2798:22:::1;735:10:2::0;2807:12:3::1;656:96:2::0;8094:301:6;8302:9;8317:3;-1:-1:-1;;;;;8317:8:6;8333:7;8317:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8301:44;;;8359:4;8355:33;;8372:16;;-1:-1:-1;;;8372:16:6;;;;;;;;;;;2431:307:4;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:4;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;2002:128:3:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:3;;;;;;;;;;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2202:126:3:-;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:3;;;;;;;;;;;14:273:7;70:6;123:2;111:9;102:7;98:23;94:32;91:52;;;139:1;136;129:12;91:52;178:9;165:23;231:5;224:13;217:21;210:5;207:32;197:60;;253:1;250;243:12;197:60;276:5;14:273;-1:-1:-1;;;14:273:7:o;292:180::-;351:6;404:2;392:9;383:7;379:23;375:32;372:52;;;420:1;417;410:12;372:52;-1:-1:-1;443:23:7;;292:180;-1:-1:-1;292:180:7:o;659:131::-;-1:-1:-1;;;;;734:31:7;;724:42;;714:70;;780:1;777;770:12;795:383;872:6;880;888;941:2;929:9;920:7;916:23;912:32;909:52;;;957:1;954;947:12;909:52;996:9;983:23;1015:31;1040:5;1015:31;:::i;:::-;1065:5;1117:2;1102:18;;1089:32;;-1:-1:-1;1168:2:7;1153:18;;;1140:32;;795:383;-1:-1:-1;;;795:383:7:o;2189:247::-;2248:6;2301:2;2289:9;2280:7;2276:23;2272:32;2269:52;;;2317:1;2314;2307:12;2269:52;2356:9;2343:23;2375:31;2400:5;2375:31;:::i;2441:251::-;2511:6;2564:2;2552:9;2543:7;2539:23;2535:32;2532:52;;;2580:1;2577;2570:12;2532:52;2612:9;2606:16;2631:31;2656:5;2631:31;:::i;2697:127::-;2758:10;2753:3;2749:20;2746:1;2739:31;2789:4;2786:1;2779:15;2813:4;2810:1;2803:15;2829:168;2902:9;;;2933;;2950:15;;;2944:22;;2930:37;2920:71;;2971:18;;:::i;3002:217::-;3042:1;3068;3058:132;;3112:10;3107:3;3103:20;3100:1;3093:31;3147:4;3144:1;3137:15;3175:4;3172:1;3165:15;3058:132;-1:-1:-1;3204:9:7;;3002:217::o;3224:135::-;3263:3;3284:17;;;3281:43;;3304:18;;:::i;:::-;-1:-1:-1;3351:1:7;3340:13;;3224:135::o;3744:128::-;3811:9;;;3832:11;;;3829:37;;;3846:18;;:::i;4130:125::-;4195:9;;;4216:10;;;4213:36;;;4229:18;;:::i"
            },
            "methodIdentifiers": {
              "calculateRepaymentAmount(uint256)": "b1197239",
              "claimNFT(uint256)": "fe5c873a",
              "collateralizedNFTs(uint256)": "6ef2dd35",
              "createLoan(address,uint256,uint256)": "488dd3e6",
              "depositFunds()": "e2c41dbc",
              "getNFTPrice()": "fb107a4f",
              "interestRate()": "7c3a00fd",
              "loanDuration()": "f5521bf1",
              "loans(uint256)": "e1ec3c68",
              "maxNumberOfLendingsPerWallet()": "af310cc1",
              "maxPercentageForLoans()": "2f7ab572",
              "owner()": "8da5cb5b",
              "pause(bool)": "02329a29",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "repayLoan(uint256)": "ab7b1c89",
              "totalLoans()": "cc952b57",
              "transferOwnership(address)": "f2fde38b",
              "withdrawFunds(uint256)": "155dd5ee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyCollateralized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientContractBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LoanAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LoanDeactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LoanExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LoanNotExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyLoans\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedBorrower\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedTransfer\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"LoanCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"}],\"name\":\"NFTClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanAmount\",\"type\":\"uint256\"}],\"name\":\"calculateRepaymentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"claimNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"collateralizedNFTs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanAmount\",\"type\":\"uint256\"}],\"name\":\"createLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNFTPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loanDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStart\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxNumberOfLendingsPerWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPercentageForLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loanId\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@tunahandag\",\"details\":\"Contract for lending ETH against NFT collaterals Borrowers can lock their NFTs as collateral and borrow ETH Lenders can deposit ETH into the contract to provide liquidity for loans Borrowers can repay the loan and claim back their NFTs If the borrower does not repay the loan within the loan duration, the NFT is claimed by the contract owner The contract owner can withdraw funds from the contract\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"calculateRepaymentAmount(uint256)\":{\"details\":\"Function to calculate the repayment amount with interest\",\"params\":{\"_loanAmount\":\"The amount of the loan\"},\"returns\":{\"_0\":\"The total repayment amount with interest\"}},\"claimNFT(uint256)\":{\"details\":\"Function to claim an NFT by the contract owner if the loan is not repaid within the loan duration\",\"params\":{\"_loanId\":\"The ID of the loan\"}},\"constructor\":{\"details\":\"Constructor to initialize the interest rate and loan duration\",\"params\":{\"_interestRate\":\"The interest rate in basis points\",\"_loanDuration\":\"The duration of the loan in seconds\"}},\"createLoan(address,uint256,uint256)\":{\"details\":\"Function to create a loan by collateralizing an NFT\",\"params\":{\"_loanAmount\":\"The amount of the loan\",\"_nftAddress\":\"The address of the NFT contract\",\"_nftId\":\"The token ID of the NFT\"}},\"depositFunds()\":{\"details\":\"Function to deposit ETH into the contract to provide liquidity for loans\"},\"getNFTPrice()\":{\"details\":\"Get the price of the NFT\",\"returns\":{\"_0\":\"The price of the NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(bool)\":{\"details\":\"Function to pause the contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"repayLoan(uint256)\":{\"details\":\"Function to repay a loan by transferring the loan amount to the contract with interest\",\"params\":{\"_loanId\":\"The ID of the loan\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds(uint256)\":{\"details\":\"Function to withdraw ETH from the contract\",\"params\":{\"_amount\":\"The amount of ETH to withdraw\"}}},\"title\":\"NFTLending\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createLoan(address,uint256,uint256)\":{\"notice\":\"The borrower must be the owner of the NFTThe NFT must be approved for transfer by the contractThe contract must have enough balance to transfer the loan amountThe loan amount must be less than the maximum percentage of the NFT priceThe borrower can only have a maximum number of loansThe NFT must not be already collateralized\"},\"getNFTPrice()\":{\"notice\":\"This function is used to get the price of the NFT, can be improved by connecting it to an oracle\"},\"pause(bool)\":{\"notice\":\"The contract owner can pause the contract\"},\"withdrawFunds(uint256)\":{\"notice\":\"The contract owner can withdraw funds from the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTLending.sol\":\"NFTLending\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/NFTLending.sol\":{\"keccak256\":\"0x86aa34d8609f26a0793b2b1b9d872d959e222e4ff592d4646955f7b2deeff84a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc8400212b32317c9217bfa8f59d620638fcd59b788978bd132b1dd4e5c7bdc1\",\"dweb:/ipfs/QmUZNwhvNYR8vJpVkaYJ8AuwMMpqyuqkNFCnF6RRbo4paH\"]}},\"version\":1}"
        }
      }
    }
  }
}